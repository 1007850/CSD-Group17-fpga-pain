/*
    This file was generated automatically by Alchitry Labs 2.0.30-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module fsm (
        input wire clk,
        input wire rst,
        input wire next_start_button,
        input wire move_up_button,
        input wire move_down_button,
        input wire move_left_button,
        input wire move_right_button,
        input wire deselect_button,
        input wire select_button,
        input wire [12:0] pac,
        input wire [12:0] pbc,
        input wire [12:0] timer,
        input wire timerclk,
        input wire gameclk,
        input wire med_inputclk,
        output reg [5:0] alufn,
        output reg [1:0] brsel,
        output reg bwe,
        output reg [1:0] bwd,
        input wire ddr,
        output reg [2:0] ra1,
        output reg [2:0] ra2,
        input wire [12:0] rd1,
        input wire [12:0] rd2,
        output reg [2:0] wa,
        output reg we,
        output reg asel,
        output reg [3:0] bsel,
        output reg [3:0] wdsel,
        output reg srst,
        output reg sre1,
        output reg sre2,
        output reg sre3,
        input wire [1:0] srd1,
        input wire [1:0] srd2,
        input wire [1:0] srd3,
        output reg swe1,
        output reg swe2,
        output reg swe3,
        output reg [7:0] debug_out
    );
    localparam E_States_A_INPUT_IDLE = 8'h0;
    localparam E_States_A_SET_PIXEL_A = 8'h1;
    localparam E_States_A_SET_PIXEL_0 = 8'h2;
    localparam E_States_A_COUNTP1 = 8'h3;
    localparam E_States_A_COUNTM1 = 8'h4;
    localparam E_States_A_UP_DIR_IDLE = 8'h5;
    localparam E_States_A_UP_CLK = 8'h6;
    localparam E_States_A_UP_COUNTP1 = 8'h7;
    localparam E_States_A_UP_SET_PIXEL_A = 8'h8;
    localparam E_States_A_UP_COUNTM1 = 8'h9;
    localparam E_States_A_UP_SET_PIXEL_0 = 8'ha;
    localparam E_States_A_UP_CHECK_PIXEL = 8'hb;
    localparam E_States_A_UP_RESET_PIXEL = 8'hc;
    localparam E_States_A_UP_MOVE_CURSOR = 8'hd;
    localparam E_States_A_UP_STORE_PIXEL = 8'he;
    localparam E_States_A_UP_CURSOR_COLOUR = 8'hf;
    localparam E_States_A_DOWN_DIR_IDLE = 8'h10;
    localparam E_States_A_DOWN_CLK = 8'h11;
    localparam E_States_A_DOWN_COUNTP1 = 8'h12;
    localparam E_States_A_DOWN_SET_PIXEL_A = 8'h13;
    localparam E_States_A_DOWN_COUNTM1 = 8'h14;
    localparam E_States_A_DOWN_SET_PIXEL_0 = 8'h15;
    localparam E_States_A_DOWN_CHECK_PIXEL = 8'h16;
    localparam E_States_A_DOWN_RESET_PIXEL = 8'h17;
    localparam E_States_A_DOWN_MOVE_CURSOR = 8'h18;
    localparam E_States_A_DOWN_STORE_PIXEL = 8'h19;
    localparam E_States_A_DOWN_CURSOR_COLOUR = 8'h1a;
    localparam E_States_A_LEFT_DIR_IDLE = 8'h1b;
    localparam E_States_A_LEFT_CLK = 8'h1c;
    localparam E_States_A_LEFT_COUNTP1 = 8'h1d;
    localparam E_States_A_LEFT_SET_PIXEL_A = 8'h1e;
    localparam E_States_A_LEFT_COUNTM1 = 8'h1f;
    localparam E_States_A_LEFT_SET_PIXEL_0 = 8'h20;
    localparam E_States_A_LEFT_CHECK_PIXEL = 8'h21;
    localparam E_States_A_LEFT_RESET_PIXEL = 8'h22;
    localparam E_States_A_LEFT_MOVE_CURSOR = 8'h23;
    localparam E_States_A_LEFT_STORE_PIXEL = 8'h24;
    localparam E_States_A_LEFT_CURSOR_COLOUR = 8'h25;
    localparam E_States_A_RIGHT_DIR_IDLE = 8'h26;
    localparam E_States_A_RIGHT_CLK = 8'h27;
    localparam E_States_A_RIGHT_COUNTP1 = 8'h28;
    localparam E_States_A_RIGHT_SET_PIXEL_A = 8'h29;
    localparam E_States_A_RIGHT_COUNTM1 = 8'h2a;
    localparam E_States_A_RIGHT_SET_PIXEL_0 = 8'h2b;
    localparam E_States_A_RIGHT_CHECK_PIXEL = 8'h2c;
    localparam E_States_A_RIGHT_RESET_PIXEL = 8'h2d;
    localparam E_States_A_RIGHT_MOVE_CURSOR = 8'h2e;
    localparam E_States_A_RIGHT_STORE_PIXEL = 8'h2f;
    localparam E_States_A_RIGHT_CURSOR_COLOUR = 8'h30;
    localparam E_States_B_INPUT_IDLE = 8'h31;
    localparam E_States_B_SET_PIXEL_B = 8'h32;
    localparam E_States_B_SET_PIXEL_0 = 8'h33;
    localparam E_States_B_COUNTP1 = 8'h34;
    localparam E_States_B_COUNTM1 = 8'h35;
    localparam E_States_B_UP_DIR_IDLE = 8'h36;
    localparam E_States_B_UP_CLK = 8'h37;
    localparam E_States_B_UP_COUNTP1 = 8'h38;
    localparam E_States_B_UP_SET_PIXEL_B = 8'h39;
    localparam E_States_B_UP_COUNTM1 = 8'h3a;
    localparam E_States_B_UP_SET_PIXEL_0 = 8'h3b;
    localparam E_States_B_UP_CHECK_PIXEL = 8'h3c;
    localparam E_States_B_UP_RESET_PIXEL = 8'h3d;
    localparam E_States_B_UP_MOVE_CURSOR = 8'h3e;
    localparam E_States_B_UP_STORE_PIXEL = 8'h3f;
    localparam E_States_B_UP_CURSOR_COLOUR = 8'h40;
    localparam E_States_B_DOWN_DIR_IDLE = 8'h41;
    localparam E_States_B_DOWN_CLK = 8'h42;
    localparam E_States_B_DOWN_COUNTP1 = 8'h43;
    localparam E_States_B_DOWN_SET_PIXEL_B = 8'h44;
    localparam E_States_B_DOWN_COUNTM1 = 8'h45;
    localparam E_States_B_DOWN_SET_PIXEL_0 = 8'h46;
    localparam E_States_B_DOWN_CHECK_PIXEL = 8'h47;
    localparam E_States_B_DOWN_RESET_PIXEL = 8'h48;
    localparam E_States_B_DOWN_MOVE_CURSOR = 8'h49;
    localparam E_States_B_DOWN_STORE_PIXEL = 8'h4a;
    localparam E_States_B_DOWN_CURSOR_COLOUR = 8'h4b;
    localparam E_States_B_LEFT_DIR_IDLE = 8'h4c;
    localparam E_States_B_LEFT_CLK = 8'h4d;
    localparam E_States_B_LEFT_COUNTP1 = 8'h4e;
    localparam E_States_B_LEFT_SET_PIXEL_B = 8'h4f;
    localparam E_States_B_LEFT_COUNTM1 = 8'h50;
    localparam E_States_B_LEFT_SET_PIXEL_0 = 8'h51;
    localparam E_States_B_LEFT_CHECK_PIXEL = 8'h52;
    localparam E_States_B_LEFT_RESET_PIXEL = 8'h53;
    localparam E_States_B_LEFT_MOVE_CURSOR = 8'h54;
    localparam E_States_B_LEFT_STORE_PIXEL = 8'h55;
    localparam E_States_B_LEFT_CURSOR_COLOUR = 8'h56;
    localparam E_States_B_RIGHT_DIR_IDLE = 8'h57;
    localparam E_States_B_RIGHT_CLK = 8'h58;
    localparam E_States_B_RIGHT_COUNTP1 = 8'h59;
    localparam E_States_B_RIGHT_SET_PIXEL_B = 8'h5a;
    localparam E_States_B_RIGHT_COUNTM1 = 8'h5b;
    localparam E_States_B_RIGHT_SET_PIXEL_0 = 8'h5c;
    localparam E_States_B_RIGHT_CHECK_PIXEL = 8'h5d;
    localparam E_States_B_RIGHT_RESET_PIXEL = 8'h5e;
    localparam E_States_B_RIGHT_MOVE_CURSOR = 8'h5f;
    localparam E_States_B_RIGHT_STORE_PIXEL = 8'h60;
    localparam E_States_B_RIGHT_CURSOR_COLOUR = 8'h61;
    localparam E_States_REMOVE_CURSOR = 8'h62;
    localparam E_States_RESET_PIXEL_TO_0 = 8'h63;
    localparam E_States_GAME_IDLE = 8'h64;
    localparam E_States_TIMER_M1 = 8'h65;
    localparam E_States_END_GAME = 8'h66;
    localparam E_States_GAME_IDLE_READ_CURR_PIXEL_VALUE = 8'h67;
    localparam E_States_RESET_SR_POINTERS = 8'h68;
    localparam E_States_SR_00_ALL_SR = 8'h69;
    localparam E_States_SR_LOAD_TOP_MID = 8'h6a;
    localparam E_States_SR_LOAD_TOP_RIGHT = 8'h6b;
    localparam E_States_SR_LOAD_MID_MID = 8'h6c;
    localparam E_States_SR_LOAD_MID_RIGHT = 8'h6d;
    localparam E_States_SR_LOAD_BOT_MID = 8'h6e;
    localparam E_States_SR_LOAD_BOT_RIGHT = 8'h6f;
    localparam E_States_READ_BRAM = 8'h70;
    localparam E_States_RB_LOAD_TOP_RIGHT = 8'h71;
    localparam E_States_RB_LOAD_MID_RIGHT = 8'h72;
    localparam E_States_RB_LOAD_BOT_RIGHT = 8'h73;
    localparam E_States_PASS_00_TO_SR = 8'h74;
    localparam E_States_READ_CURR_PIXEL_VALUE_00_ALL_SR = 8'h75;
    localparam E_States_READ_TOP_LEFT = 8'h76;
    localparam E_States_TOP_LEFT_ADD_A_NEIGHBOUR = 8'h77;
    localparam E_States_TOP_LEFT_ADD_B_NEIGHBOUR = 8'h78;
    localparam E_States_READ_TOP_MID = 8'h79;
    localparam E_States_TOP_MID_ADD_A_NEIGHBOUR = 8'h7a;
    localparam E_States_TOP_MID_ADD_B_NEIGHBOUR = 8'h7b;
    localparam E_States_READ_TOP_RIGHT = 8'h7c;
    localparam E_States_TOP_RIGHT_ADD_A_NEIGHBOUR = 8'h7d;
    localparam E_States_TOP_RIGHT_ADD_B_NEIGHBOUR = 8'h7e;
    localparam E_States_READ_MID_LEFT = 8'h7f;
    localparam E_States_MID_LEFT_ADD_A_NEIGHBOUR = 8'h80;
    localparam E_States_MID_LEFT_ADD_B_NEIGHBOUR = 8'h81;
    localparam E_States_READ_TARGET_PIXEL = 8'h82;
    localparam E_States_READ_MID_RIGHT = 8'h83;
    localparam E_States_MID_RIGHT_ADD_A_NEIGHBOUR = 8'h84;
    localparam E_States_MID_RIGHT_ADD_B_NEIGHBOUR = 8'h85;
    localparam E_States_READ_BOT_LEFT = 8'h86;
    localparam E_States_BOT_LEFT_ADD_A_NEIGHBOUR = 8'h87;
    localparam E_States_BOT_LEFT_ADD_B_NEIGHBOUR = 8'h88;
    localparam E_States_READ_BOT_MID = 8'h89;
    localparam E_States_BOT_MID_ADD_A_NEIGHBOUR = 8'h8a;
    localparam E_States_BOT_MID_ADD_B_NEIGHBOUR = 8'h8b;
    localparam E_States_READ_BOT_RIGHT = 8'h8c;
    localparam E_States_BOT_RIGHT_ADD_A_NEIGHBOUR = 8'h8d;
    localparam E_States_BOT_RIGHT_ADD_B_NEIGHBOUR = 8'h8e;
    localparam E_States_SR_EMPTY_READ_1 = 8'h8f;
    localparam E_States_SR_EMPTY_READ_2 = 8'h90;
    localparam E_States_CHECK_NEIGHBOURS = 8'h91;
    localparam E_States_B00_CHECK_A_NEIGHBOURS_EQ_B_NEIGHBOURS = 8'h92;
    localparam E_States_B00_CHECK_A_NEIGHBOUR_EQ_3 = 8'h93;
    localparam E_States_B00_CHECK_B_NEIGHBOUR_EQ_3 = 8'h94;
    localparam E_States_B00_A_COUNTP1 = 8'h95;
    localparam E_States_B00_B_COUNTP1 = 8'h96;
    localparam E_States_B10_CHECK_A_NEIGHBOUR_LE_B_NEIGHBOUR = 8'h97;
    localparam E_States_B10_CHECK_B_NEIGHBOUR_EQ_2_OR_3 = 8'h98;
    localparam E_States_B10_B_COUNTM1 = 8'h99;
    localparam E_States_B01_CHECK_B_NEIGHBOUR_LE_A_NEIGHBOUR = 8'h9a;
    localparam E_States_B01_CHECK_A_NEIGHBOUR_EQ_2_OR_3 = 8'h9b;
    localparam E_States_B01_A_COUNTM1 = 8'h9c;
    localparam E_States_SET_A = 8'h9d;
    localparam E_States_SET_B = 8'h9e;
    localparam E_States_SET_00 = 8'h9f;
    localparam E_States_RESET_A_NEIGHBOUR = 8'ha0;
    localparam E_States_RESET_B_NEIGHBOUR = 8'ha1;
    localparam E_States_MOVE_PIXEL_ADDRESS = 8'ha2;
    localparam E_States_CHECK_AT_LAST_PIXEL = 8'ha3;
    localparam E_States_SWITCH_BRAM = 8'ha4;
    localparam E_States_CHECK_END_GAME = 8'ha5;
    localparam E_States_SET_PIXEL_TO_BEGINNING = 8'ha6;
    localparam E_States_SET_BRAM_SELECTOR_TO_1 = 8'ha7;
    localparam E_States_SET_PIXEL_ADDRESS_TO_0 = 8'ha8;
    localparam E_States_ZERO_BRAM = 8'ha9;
    localparam E_States_ZERO_BRAM_2 = 8'haa;
    localparam E_States_CHECK_ADDRESS_AT_MAX = 8'hab;
    localparam E_States_SET_TIMER = 8'hac;
    localparam E_States_RESET_PIXEL_VALUE = 8'had;
    localparam E_States_RESET_PIXEL_ADDRESS = 8'hae;
    localparam E_States_RESET_A_COUNT = 8'haf;
    localparam E_States_RESET_B_COUNT = 8'hb0;
    localparam E_States_SET_SELECTOR_PIXEL_STATE = 8'hb1;
    logic D_decrease_timer_d, D_decrease_timer_q = 0;
    logic D_game_tick_d, D_game_tick_q = 0;
    logic [1:0] D_accel_selector_d, D_accel_selector_q = 0;
    logic [3:0] D_accel_timer_d, D_accel_timer_q = 0;
    logic [3:0] D_accel_d, D_accel_q = 0;
    logic D_accel_edge_buff_d, D_accel_edge_buff_q = 0;
    localparam _MP_RISE_1566202319 = 1'h0;
    localparam _MP_FALL_1566202319 = 1'h1;
    logic M_accel_edge_in;
    logic M_accel_edge_out;
    
    edge_detector #(
        .RISE(_MP_RISE_1566202319),
        .FALL(_MP_FALL_1566202319)
    ) accel_edge (
        .clk(clk),
        .in(M_accel_edge_in),
        .out(M_accel_edge_out)
    );
    
    
    logic [7:0] D_states_d, D_states_q = 8'ha7;
    logic D_bram_read_d, D_bram_read_q = 0;
    logic [7:0] D_debug_dff_d, D_debug_dff_q = 0;
    localparam ADD = 6'h0;
    localparam SUB = 6'h1;
    localparam XOR = 6'h16;
    localparam PASSTHROUGH = 6'h1a;
    localparam A_NEIGHBOUR_ADDRESS = 1'h0;
    localparam B_NEIGHBOUR_ADDRESS = 1'h1;
    localparam A_COUNT = 2'h2;
    localparam B_COUNT = 2'h3;
    localparam TARGET_PIXEL_ADDRESS = 3'h4;
    localparam TARGET_PIXEL_VALUE = 3'h5;
    localparam TIMER = 3'h6;
    localparam BRAM_SWITCH = 3'h7;
    always @* begin
        D_debug_dff_d = D_debug_dff_q;
        D_states_d = D_states_q;
        D_decrease_timer_d = D_decrease_timer_q;
        D_game_tick_d = D_game_tick_q;
        D_accel_selector_d = D_accel_selector_q;
        D_accel_d = D_accel_q;
        D_accel_edge_buff_d = D_accel_edge_buff_q;
        D_accel_timer_d = D_accel_timer_q;
        D_bram_read_d = D_bram_read_q;
        
        debug_out = D_debug_dff_q;
        D_debug_dff_d = 1'h1;
        D_states_d = D_states_q;
        brsel = 2'h2;
        bwe = 1'h0;
        bwd = 1'h0;
        ra1 = 1'h0;
        ra2 = 1'h0;
        wa = 1'h0;
        we = 1'h0;
        alufn = 1'h0;
        asel = 1'h0;
        bsel = 1'h0;
        wdsel = 1'h0;
        srst = 1'h0;
        swe1 = 1'h0;
        sre1 = 1'h0;
        swe2 = 1'h0;
        sre2 = 1'h0;
        swe3 = 1'h0;
        sre3 = 1'h0;
        D_decrease_timer_d = D_decrease_timer_q;
        if (timerclk) begin
            if ((|timer)) begin
                D_decrease_timer_d = 1'h1;
            end
        end
        D_game_tick_d = D_game_tick_q;
        if (gameclk) begin
            D_game_tick_d = 1'h1;
        end
        
        case (D_accel_selector_q)
            2'h0: begin
                M_accel_edge_in = D_accel_q[2'h3];
            end
            2'h1: begin
                M_accel_edge_in = D_accel_q[2'h2];
            end
            2'h2: begin
                M_accel_edge_in = D_accel_q[1'h0];
            end
            default: begin
                M_accel_edge_in = D_accel_q[2'h3];
            end
        endcase
        
        case (D_accel_timer_q)
            4'h1: begin
                D_accel_selector_d = 2'h1;
            end
            4'h4: begin
                D_accel_selector_d = 2'h2;
            end
            default: begin
                D_accel_selector_d = D_accel_selector_q;
            end
        endcase
        if (gameclk) begin
            D_accel_d = D_accel_q + 1'h1;
        end else begin
            D_accel_d = D_accel_q;
        end
        D_accel_edge_buff_d = M_accel_edge_out;
        
        case (D_states_q)
            8'ha7: begin
                we = 1'h1;
                wdsel = 4'h2;
                wa = 3'h7;
                D_states_d = 8'ha8;
                D_debug_dff_d = 1'h1;
            end
            8'ha8: begin
                we = 1'h1;
                wdsel = 4'h1;
                wa = 3'h4;
                D_states_d = 8'ha9;
                D_debug_dff_d = 2'h2;
            end
            8'ha9: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 3'h4;
                wdsel = 4'h0;
                wa = 3'h4;
                bwe = 1'h1;
                bwd = 2'h0;
                brsel = 2'h0;
                D_states_d = 8'haa;
                D_debug_dff_d = 2'h3;
            end
            8'haa: begin
                ra1 = 3'h4;
                bwe = 1'h1;
                bwd = 2'h0;
                brsel = 2'h1;
                D_states_d = 8'hab;
                D_debug_dff_d = 8'h9d;
            end
            8'hab: begin
                ra1 = 3'h4;
                
                case (rd1)
                    13'h107f: begin
                        D_states_d = 8'hac;
                    end
                    default: begin
                        D_states_d = 8'ha9;
                    end
                endcase
                D_debug_dff_d = 3'h4;
            end
            8'hac: begin
                we = 1'h1;
                wdsel = 4'h6;
                wa = 3'h6;
                D_states_d = 8'had;
                D_debug_dff_d = 3'h5;
            end
            8'had: begin
                we = 1'h1;
                wdsel = 4'h1;
                wa = 3'h5;
                D_states_d = 8'hae;
                D_debug_dff_d = 3'h6;
            end
            8'hae: begin
                we = 1'h1;
                wdsel = 4'h7;
                wa = 3'h4;
                D_states_d = 8'haf;
                D_debug_dff_d = 3'h7;
            end
            8'haf: begin
                we = 1'h1;
                wdsel = 4'h1;
                wa = 2'h2;
                D_states_d = 8'hb0;
                D_debug_dff_d = 8'h9f;
            end
            8'hb0: begin
                we = 1'h1;
                wdsel = 4'h1;
                wa = 2'h3;
                D_states_d = 8'hb1;
                D_debug_dff_d = 8'ha0;
            end
            8'hb1: begin
                ra1 = 3'h4;
                bwe = 1'h1;
                bwd = 2'h3;
                brsel = 2'h0;
                D_states_d = 8'h0;
                D_debug_dff_d = 4'h8;
            end
            8'h0: begin
                ra1 = 3'h5;
                if (move_up_button) begin
                    D_accel_d = 1'h0;
                    D_states_d = 8'h5;
                end else begin
                    if (move_down_button) begin
                        D_accel_d = 1'h0;
                        D_states_d = 8'h10;
                    end else begin
                        if (move_left_button) begin
                            D_accel_d = 1'h0;
                            D_states_d = 8'h1b;
                        end else begin
                            if (move_right_button) begin
                                D_accel_d = 1'h0;
                                D_states_d = 8'h26;
                            end else begin
                                if (select_button) begin
                                    if (~(|rd1[1'h1:1'h0])) begin
                                        D_states_d = 8'h3;
                                    end
                                end else begin
                                    if (deselect_button) begin
                                        if (rd1[1'h0]) begin
                                            D_states_d = 8'h4;
                                        end
                                    end else begin
                                        if (next_start_button) begin
                                            D_states_d = 8'h31;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                D_debug_dff_d = 4'h9;
            end
            8'h3: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h2;
                wdsel = 4'h0;
                wa = 2'h2;
                D_states_d = 8'h1;
                D_debug_dff_d = 4'hb;
            end
            8'h1: begin
                we = 1'h1;
                wdsel = 4'h2;
                wa = 3'h5;
                D_states_d = 8'h0;
                D_debug_dff_d = 7'h50;
            end
            8'h4: begin
                alufn = 6'h1;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h2;
                wdsel = 4'h0;
                wa = 2'h2;
                D_states_d = 8'h2;
                D_debug_dff_d = 4'hd;
            end
            8'h2: begin
                we = 1'h1;
                wdsel = 4'h1;
                wa = 3'h5;
                D_states_d = 8'h0;
                D_debug_dff_d = 7'h51;
            end
            8'h5: begin
                ra1 = 3'h5;
                if (move_up_button) begin
                    if (select_button) begin
                        if (~(|rd1[1'h1:1'h0])) begin
                            D_states_d = 8'h7;
                        end else begin
                            D_states_d = 8'hb;
                        end
                    end else begin
                        if (deselect_button) begin
                            if (rd1[1'h0]) begin
                                D_states_d = 8'h9;
                            end else begin
                                D_states_d = 8'hb;
                            end
                        end else begin
                            D_states_d = 8'hb;
                        end
                    end
                end else begin
                    D_states_d = 8'h0;
                end
                D_debug_dff_d = 4'ha;
            end
            8'h6: begin
                if (move_up_button) begin
                    if (D_accel_edge_buff_q) begin
                        
                        case (D_accel_timer_q)
                            4'hf: begin
                                D_accel_timer_d = D_accel_timer_q;
                            end
                            default: begin
                                D_accel_timer_d = D_accel_timer_q + 1'h1;
                            end
                        endcase
                        D_accel_d = 1'h0;
                        D_states_d = 8'h5;
                    end
                end else begin
                    D_accel_timer_d = 1'h0;
                    D_accel_selector_d = 1'h0;
                    D_states_d = 8'h5;
                end
                D_debug_dff_d = 8'hff;
            end
            8'h7: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h2;
                wdsel = 4'h0;
                wa = 2'h2;
                D_states_d = 8'h8;
                D_debug_dff_d = 4'hb;
            end
            8'h8: begin
                we = 1'h1;
                wdsel = 4'h2;
                wa = 3'h5;
                D_states_d = 8'hb;
                D_debug_dff_d = 4'hc;
            end
            8'h9: begin
                alufn = 6'h1;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h2;
                wdsel = 4'h0;
                wa = 2'h2;
                D_states_d = 8'ha;
                D_debug_dff_d = 4'hd;
            end
            8'ha: begin
                we = 1'h1;
                wdsel = 4'h1;
                wa = 3'h5;
                D_states_d = 8'hb;
                D_debug_dff_d = 4'he;
            end
            8'hb: begin
                ra1 = 3'h4;
                
                case (rd1[4'hc:3'h6])
                    7'h1: begin
                        D_states_d = 8'h6;
                    end
                    default: begin
                        D_states_d = 8'hc;
                    end
                endcase
                D_debug_dff_d = 4'hf;
            end
            8'hc: begin
                bsel = 4'h0;
                ra1 = 3'h4;
                ra2 = 3'h5;
                bwd = rd2;
                bwe = 1'h1;
                brsel = 2'h0;
                D_states_d = 8'hd;
                D_debug_dff_d = 5'h10;
            end
            8'hd: begin
                if (~ddr) begin
                    alufn = 6'h1;
                    bsel = 4'h4;
                    we = 1'h1;
                    ra1 = 3'h4;
                    wdsel = 4'h0;
                    wa = 3'h4;
                    brsel = 2'h1;
                    D_states_d = 8'he;
                end
                D_debug_dff_d = 5'h11;
            end
            8'he: begin
                we = 1'h1;
                wdsel = 4'h4;
                wa = 3'h5;
                D_states_d = 8'hf;
                D_debug_dff_d = 5'h12;
            end
            8'hf: begin
                ra1 = 3'h4;
                bwe = 1'h1;
                bwd = 2'h3;
                brsel = 2'h0;
                D_states_d = 8'h6;
                D_debug_dff_d = 5'h13;
            end
            8'h10: begin
                ra1 = 3'h5;
                if (move_down_button) begin
                    if (select_button) begin
                        if (~(|rd1[1'h1:1'h0])) begin
                            D_states_d = 8'h12;
                        end else begin
                            D_states_d = 8'h16;
                        end
                    end else begin
                        if (deselect_button) begin
                            if (rd1[1'h0]) begin
                                D_states_d = 8'h14;
                            end else begin
                                D_states_d = 8'h16;
                            end
                        end else begin
                            D_states_d = 8'h16;
                        end
                    end
                end else begin
                    D_states_d = 8'h0;
                end
                D_debug_dff_d = 5'h14;
            end
            8'h11: begin
                if (move_down_button) begin
                    if (D_accel_edge_buff_q) begin
                        
                        case (D_accel_timer_q)
                            4'hf: begin
                                D_accel_timer_d = D_accel_timer_q;
                            end
                            default: begin
                                D_accel_timer_d = D_accel_timer_q + 1'h1;
                            end
                        endcase
                        D_accel_d = 1'h0;
                        D_states_d = 8'h10;
                    end
                end else begin
                    D_accel_timer_d = 1'h0;
                    D_accel_selector_d = 1'h0;
                    D_states_d = 8'h10;
                end
                D_debug_dff_d = 8'hff;
            end
            8'h12: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h2;
                wdsel = 4'h0;
                wa = 2'h2;
                D_states_d = 8'h13;
                D_debug_dff_d = 5'h15;
            end
            8'h13: begin
                we = 1'h1;
                wdsel = 4'h2;
                wa = 3'h5;
                D_states_d = 8'h16;
                D_debug_dff_d = 5'h16;
            end
            8'h14: begin
                alufn = 6'h1;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h2;
                wdsel = 4'h0;
                wa = 2'h2;
                D_states_d = 8'h15;
                D_debug_dff_d = 5'h17;
            end
            8'h15: begin
                we = 1'h1;
                wdsel = 4'h1;
                wa = 3'h5;
                D_states_d = 8'h16;
                D_debug_dff_d = 5'h18;
            end
            8'h16: begin
                ra1 = 3'h4;
                
                case (rd1[4'hc])
                    1'h1: begin
                        D_states_d = 8'h11;
                    end
                    default: begin
                        D_states_d = 8'h17;
                    end
                endcase
                D_debug_dff_d = 5'h19;
            end
            8'h17: begin
                bsel = 4'h0;
                ra1 = 3'h4;
                ra2 = 3'h5;
                bwd = rd2;
                bwe = 1'h1;
                brsel = 2'h0;
                D_states_d = 8'h18;
                D_debug_dff_d = 5'h1a;
            end
            8'h18: begin
                if (ddr) begin
                    D_states_d = 8'h18;
                end else begin
                    alufn = 6'h0;
                    bsel = 4'h4;
                    we = 1'h1;
                    ra1 = 3'h4;
                    wdsel = 4'h0;
                    bwe = 1'h1;
                    wa = 3'h4;
                    brsel = 2'h1;
                    D_states_d = 8'h19;
                end
                D_debug_dff_d = 5'h1b;
            end
            8'h19: begin
                we = 1'h1;
                wdsel = 4'h4;
                wa = 3'h5;
                D_states_d = 8'h1a;
                D_debug_dff_d = 5'h1c;
            end
            8'h1a: begin
                ra1 = 3'h4;
                bwe = 1'h1;
                bwd = 2'h3;
                brsel = 2'h0;
                D_states_d = 8'h11;
                D_debug_dff_d = 5'h1d;
            end
            8'h1b: begin
                ra1 = 3'h5;
                if (move_left_button) begin
                    if (select_button) begin
                        if (~(|rd1[1'h1:1'h0])) begin
                            D_states_d = 8'h1d;
                        end else begin
                            D_states_d = 8'h21;
                        end
                    end else begin
                        if (deselect_button) begin
                            if (rd1[1'h0]) begin
                                D_states_d = 8'h1f;
                            end else begin
                                D_states_d = 8'h21;
                            end
                        end else begin
                            D_states_d = 8'h21;
                        end
                    end
                end else begin
                    D_states_d = 8'h0;
                end
                D_debug_dff_d = 5'h1e;
            end
            8'h1c: begin
                if (move_left_button) begin
                    if (D_accel_edge_buff_q) begin
                        
                        case (D_accel_timer_q)
                            4'hf: begin
                                D_accel_timer_d = D_accel_timer_q;
                            end
                            default: begin
                                D_accel_timer_d = D_accel_timer_q + 1'h1;
                            end
                        endcase
                        D_accel_d = 1'h0;
                        D_states_d = 8'h1b;
                    end
                end else begin
                    D_accel_timer_d = 1'h0;
                    D_accel_selector_d = 1'h0;
                    D_states_d = 8'h1b;
                end
                D_debug_dff_d = 8'hff;
            end
            8'h1d: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h2;
                wdsel = 4'h0;
                wa = 2'h2;
                D_states_d = 8'h1e;
                D_debug_dff_d = 5'h1f;
            end
            8'h1e: begin
                we = 1'h1;
                wdsel = 4'h2;
                wa = 3'h5;
                D_states_d = 8'h21;
                D_debug_dff_d = 6'h20;
            end
            8'h1f: begin
                alufn = 6'h1;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h2;
                wdsel = 4'h0;
                wa = 2'h2;
                D_states_d = 8'h20;
                D_debug_dff_d = 6'h21;
            end
            8'h20: begin
                we = 1'h1;
                wdsel = 4'h1;
                wa = 3'h5;
                D_states_d = 8'h21;
                D_debug_dff_d = 6'h22;
            end
            8'h21: begin
                ra1 = 3'h4;
                
                case (rd1[3'h5:1'h0])
                    6'h0: begin
                        D_states_d = 8'h1c;
                    end
                    default: begin
                        D_states_d = 8'h22;
                    end
                endcase
                D_debug_dff_d = 6'h23;
            end
            8'h22: begin
                bsel = 4'h0;
                ra1 = 3'h4;
                ra2 = 3'h5;
                bwd = rd2;
                brsel = 2'h0;
                bwe = 1'h1;
                D_states_d = 8'h23;
                D_debug_dff_d = 6'h24;
            end
            8'h23: begin
                if (~ddr) begin
                    alufn = 6'h1;
                    bsel = 4'h1;
                    we = 1'h1;
                    ra1 = 3'h4;
                    wdsel = 4'h0;
                    wa = 3'h4;
                    brsel = 2'h1;
                    bwe = 1'h1;
                    D_states_d = 8'h24;
                end
                D_debug_dff_d = 6'h25;
            end
            8'h24: begin
                we = 1'h1;
                wdsel = 4'h4;
                wa = 3'h5;
                D_states_d = 8'h25;
                D_debug_dff_d = 6'h26;
            end
            8'h25: begin
                ra1 = 3'h4;
                bwe = 1'h1;
                bwd = 2'h3;
                brsel = 2'h0;
                D_states_d = 8'h1c;
                D_debug_dff_d = 6'h27;
            end
            8'h26: begin
                ra1 = 3'h5;
                if (move_right_button) begin
                    if (select_button) begin
                        if (~(|rd1[1'h1:1'h0])) begin
                            D_states_d = 8'h28;
                        end else begin
                            D_states_d = 8'h2c;
                        end
                    end else begin
                        if (deselect_button) begin
                            if (rd1[1'h0]) begin
                                D_states_d = 8'h2a;
                            end else begin
                                D_states_d = 8'h2c;
                            end
                        end else begin
                            D_states_d = 8'h2c;
                        end
                    end
                end else begin
                    D_states_d = 8'h0;
                end
                D_debug_dff_d = 6'h28;
            end
            8'h27: begin
                if (move_right_button) begin
                    if (D_accel_edge_buff_q) begin
                        
                        case (D_accel_timer_q)
                            4'hf: begin
                                D_accel_timer_d = D_accel_timer_q;
                            end
                            default: begin
                                D_accel_timer_d = D_accel_timer_q + 1'h1;
                            end
                        endcase
                        D_accel_d = 1'h0;
                        D_states_d = 8'h26;
                    end
                end else begin
                    D_accel_timer_d = 1'h0;
                    D_accel_selector_d = 1'h0;
                    D_states_d = 8'h26;
                end
            end
            8'h28: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h2;
                wdsel = 4'h0;
                wa = 2'h2;
                D_states_d = 8'h29;
                D_debug_dff_d = 6'h29;
            end
            8'h29: begin
                we = 1'h1;
                wdsel = 4'h2;
                wa = 3'h5;
                D_states_d = 8'h2c;
                D_debug_dff_d = 6'h2a;
            end
            8'h2a: begin
                alufn = 6'h1;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h2;
                wdsel = 4'h0;
                wa = 2'h2;
                D_states_d = 8'h2b;
                D_debug_dff_d = 6'h2b;
            end
            8'h2b: begin
                we = 1'h1;
                wdsel = 4'h1;
                wa = 3'h5;
                D_states_d = 8'h2c;
                D_debug_dff_d = 6'h2c;
            end
            8'h2c: begin
                ra1 = 3'h4;
                
                case (rd1[3'h5:1'h0])
                    6'h3f: begin
                        D_states_d = 8'h27;
                    end
                    default: begin
                        D_states_d = 8'h2d;
                    end
                endcase
                D_debug_dff_d = 6'h2d;
            end
            8'h2d: begin
                bsel = 4'h0;
                ra1 = 3'h4;
                ra2 = 3'h5;
                bwd = rd2;
                brsel = 2'h0;
                bwe = 1'h1;
                D_states_d = 8'h2e;
                D_debug_dff_d = 6'h2e;
            end
            8'h2e: begin
                if (~ddr) begin
                    alufn = 6'h0;
                    bsel = 4'h1;
                    we = 1'h1;
                    ra1 = 3'h4;
                    wdsel = 4'h0;
                    wa = 3'h4;
                    brsel = 2'h1;
                    bwe = 1'h1;
                    D_states_d = 8'h2f;
                end
                D_debug_dff_d = 6'h2f;
            end
            8'h2f: begin
                we = 1'h1;
                wdsel = 4'h4;
                wa = 3'h5;
                D_states_d = 8'h30;
                D_debug_dff_d = 6'h30;
            end
            8'h30: begin
                ra1 = 3'h4;
                bwe = 1'h1;
                bwd = 2'h3;
                brsel = 2'h0;
                D_states_d = 8'h27;
                D_debug_dff_d = 6'h31;
            end
            8'h31: begin
                ra1 = 3'h5;
                if (move_up_button) begin
                    D_accel_d = 1'h0;
                    D_states_d = 8'h36;
                end else begin
                    if (move_down_button) begin
                        D_accel_d = 1'h0;
                        D_states_d = 8'h41;
                    end else begin
                        if (move_left_button) begin
                            D_accel_d = 1'h0;
                            D_states_d = 8'h4c;
                        end else begin
                            if (move_right_button) begin
                                D_accel_d = 1'h0;
                                D_states_d = 8'h57;
                            end else begin
                                if (select_button) begin
                                    if (~(|rd1[1'h1:1'h0])) begin
                                        D_states_d = 8'h34;
                                    end
                                end else begin
                                    if (deselect_button) begin
                                        D_states_d = 8'h62;
                                    end
                                end
                            end
                        end
                    end
                end
                D_debug_dff_d = 6'h32;
            end
            8'h34: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h3;
                wdsel = 4'h0;
                wa = 2'h3;
                D_states_d = 8'h32;
                D_debug_dff_d = 4'hb;
            end
            8'h32: begin
                we = 1'h1;
                wdsel = 4'h3;
                wa = 3'h5;
                D_states_d = 8'h31;
                D_debug_dff_d = 7'h50;
            end
            8'h35: begin
                alufn = 6'h1;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h3;
                wdsel = 4'h0;
                wa = 2'h3;
                D_states_d = 8'h33;
                D_debug_dff_d = 4'hd;
            end
            8'h33: begin
                we = 1'h1;
                wdsel = 4'h1;
                wa = 3'h5;
                D_states_d = 8'h31;
                D_debug_dff_d = 7'h51;
            end
            8'h36: begin
                ra1 = 3'h5;
                if (move_up_button) begin
                    if (select_button) begin
                        if (~(|rd1[1'h1:1'h0])) begin
                            D_states_d = 8'h38;
                        end else begin
                            D_states_d = 8'h3c;
                        end
                    end else begin
                        if (deselect_button) begin
                            if (rd1[1'h1]) begin
                                D_states_d = 8'h3a;
                            end else begin
                                D_states_d = 8'h3c;
                            end
                        end else begin
                            D_states_d = 8'h3c;
                        end
                    end
                end else begin
                    D_states_d = 8'h31;
                end
                D_debug_dff_d = 6'h33;
            end
            8'h37: begin
                if (move_up_button) begin
                    if (D_accel_edge_buff_q) begin
                        
                        case (D_accel_timer_q)
                            4'hf: begin
                                D_accel_timer_d = D_accel_timer_q;
                            end
                            default: begin
                                D_accel_timer_d = D_accel_timer_q + 1'h1;
                            end
                        endcase
                        D_accel_d = 1'h0;
                        D_states_d = 8'h36;
                    end
                end else begin
                    D_accel_timer_d = 1'h0;
                    D_accel_selector_d = 1'h0;
                    D_states_d = 8'h36;
                end
            end
            8'h38: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h3;
                wdsel = 4'h0;
                wa = 2'h3;
                D_states_d = 8'h39;
                D_debug_dff_d = 6'h34;
            end
            8'h39: begin
                we = 1'h1;
                wdsel = 4'h3;
                wa = 3'h5;
                D_states_d = 8'h3c;
                D_debug_dff_d = 6'h35;
            end
            8'h3a: begin
                alufn = 6'h1;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h3;
                wdsel = 4'h0;
                wa = 2'h3;
                D_states_d = 8'h3b;
                D_debug_dff_d = 6'h36;
            end
            8'h3b: begin
                we = 1'h1;
                wdsel = 4'h1;
                wa = 3'h5;
                D_states_d = 8'h3c;
                D_debug_dff_d = 6'h37;
            end
            8'h3c: begin
                ra1 = 3'h4;
                
                case (rd1[4'hc:3'h6])
                    7'h1: begin
                        D_states_d = 8'h37;
                    end
                    default: begin
                        D_states_d = 8'h3d;
                    end
                endcase
                D_debug_dff_d = 6'h38;
            end
            8'h3d: begin
                bsel = 4'h0;
                ra1 = 3'h4;
                ra2 = 3'h5;
                bwd = rd2;
                bwe = 1'h1;
                brsel = 2'h0;
                D_states_d = 8'h3e;
                D_debug_dff_d = 6'h39;
            end
            8'h3e: begin
                if (~ddr) begin
                    alufn = 6'h1;
                    bsel = 4'h4;
                    we = 1'h1;
                    ra1 = 3'h4;
                    wdsel = 4'h0;
                    wa = 3'h4;
                    brsel = 2'h1;
                    D_states_d = 8'h3f;
                end
                D_debug_dff_d = 6'h3a;
            end
            8'h3f: begin
                we = 1'h1;
                wdsel = 4'h4;
                wa = 3'h5;
                D_states_d = 8'h40;
                D_debug_dff_d = 6'h3b;
            end
            8'h40: begin
                ra1 = 3'h4;
                bwe = 1'h1;
                bwd = 2'h3;
                brsel = 2'h0;
                D_states_d = 8'h37;
                D_debug_dff_d = 6'h3c;
            end
            8'h41: begin
                ra1 = 3'h5;
                if (move_down_button) begin
                    if (select_button) begin
                        if (~(|rd1[1'h1:1'h0])) begin
                            D_states_d = 8'h43;
                        end else begin
                            D_states_d = 8'h47;
                        end
                    end else begin
                        if (deselect_button) begin
                            if (rd1[1'h1]) begin
                                D_states_d = 8'h45;
                            end else begin
                                D_states_d = 8'h47;
                            end
                        end else begin
                            D_states_d = 8'h47;
                        end
                    end
                end else begin
                    D_states_d = 8'h31;
                end
                D_debug_dff_d = 6'h3d;
            end
            8'h42: begin
                if (move_down_button) begin
                    if (D_accel_edge_buff_q) begin
                        
                        case (D_accel_timer_q)
                            4'hf: begin
                                D_accel_timer_d = D_accel_timer_q;
                            end
                            default: begin
                                D_accel_timer_d = D_accel_timer_q + 1'h1;
                            end
                        endcase
                        D_accel_d = 1'h0;
                        D_states_d = 8'h41;
                    end
                end else begin
                    D_accel_timer_d = 1'h0;
                    D_accel_selector_d = 1'h0;
                    D_states_d = 8'h41;
                end
            end
            8'h43: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h3;
                wdsel = 4'h0;
                wa = 2'h3;
                D_states_d = 8'h44;
                D_debug_dff_d = 6'h3e;
            end
            8'h44: begin
                we = 1'h1;
                wdsel = 4'h3;
                wa = 3'h5;
                D_states_d = 8'h47;
                D_debug_dff_d = 6'h3f;
            end
            8'h45: begin
                alufn = 6'h1;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h3;
                wdsel = 4'h0;
                wa = 2'h3;
                D_states_d = 8'h46;
                D_debug_dff_d = 7'h40;
            end
            8'h46: begin
                we = 1'h1;
                wdsel = 4'h1;
                wa = 3'h5;
                D_states_d = 8'h47;
                D_debug_dff_d = 7'h41;
            end
            8'h47: begin
                ra1 = 3'h4;
                
                case (rd1[4'hc])
                    1'h1: begin
                        D_states_d = 8'h42;
                    end
                    default: begin
                        D_states_d = 8'h48;
                    end
                endcase
                D_debug_dff_d = 7'h42;
            end
            8'h48: begin
                bsel = 4'h0;
                ra1 = 3'h4;
                ra2 = 3'h5;
                bwd = rd2;
                brsel = 2'h0;
                bwe = 1'h1;
                D_states_d = 8'h49;
                D_debug_dff_d = 7'h43;
            end
            8'h49: begin
                if (~ddr) begin
                    alufn = 6'h0;
                    bsel = 4'h4;
                    we = 1'h1;
                    ra1 = 3'h4;
                    wdsel = 4'h0;
                    wa = 3'h4;
                    brsel = 2'h1;
                    D_states_d = 8'h4a;
                end
                D_debug_dff_d = 7'h44;
            end
            8'h4a: begin
                we = 1'h1;
                wdsel = 4'h4;
                wa = 3'h5;
                D_states_d = 8'h4b;
                D_debug_dff_d = 7'h45;
            end
            8'h4b: begin
                ra1 = 3'h4;
                bwe = 1'h1;
                bwd = 2'h3;
                brsel = 2'h0;
                D_states_d = 8'h42;
                D_debug_dff_d = 7'h46;
            end
            8'h4c: begin
                ra1 = 3'h5;
                if (move_left_button) begin
                    if (select_button) begin
                        if (~(|rd1[1'h1:1'h0])) begin
                            D_states_d = 8'h4e;
                        end else begin
                            D_states_d = 8'h52;
                        end
                    end else begin
                        if (deselect_button) begin
                            if (rd1[1'h1]) begin
                                D_states_d = 8'h50;
                            end else begin
                                D_states_d = 8'h52;
                            end
                        end else begin
                            D_states_d = 8'h52;
                        end
                    end
                end else begin
                    D_states_d = 8'h31;
                end
                D_debug_dff_d = 7'h47;
            end
            8'h4d: begin
                if (move_left_button) begin
                    if (D_accel_edge_buff_q) begin
                        
                        case (D_accel_timer_q)
                            4'hf: begin
                                D_accel_timer_d = D_accel_timer_q;
                            end
                            default: begin
                                D_accel_timer_d = D_accel_timer_q + 1'h1;
                            end
                        endcase
                        D_accel_d = 1'h0;
                        D_states_d = 8'h4c;
                    end
                end else begin
                    D_accel_timer_d = 1'h0;
                    D_accel_selector_d = 1'h0;
                    D_states_d = 8'h4c;
                end
            end
            8'h4e: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h3;
                wdsel = 4'h0;
                wa = 2'h3;
                D_states_d = 8'h4f;
                D_debug_dff_d = 7'h48;
            end
            8'h4f: begin
                we = 1'h1;
                wdsel = 4'h3;
                wa = 3'h5;
                D_states_d = 8'h52;
                D_debug_dff_d = 7'h49;
            end
            8'h50: begin
                alufn = 6'h1;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h3;
                wdsel = 4'h0;
                wa = 2'h3;
                D_states_d = 8'h51;
                D_debug_dff_d = 7'h4a;
            end
            8'h51: begin
                we = 1'h1;
                wdsel = 4'h1;
                wa = 3'h5;
                D_states_d = 8'h52;
                D_debug_dff_d = 7'h4b;
            end
            8'h52: begin
                ra1 = 3'h4;
                
                case (rd1[3'h5:1'h0])
                    6'h0: begin
                        D_states_d = 8'h4d;
                    end
                    default: begin
                        D_states_d = 8'h53;
                    end
                endcase
                D_debug_dff_d = 7'h4c;
            end
            8'h53: begin
                bsel = 4'h0;
                ra1 = 3'h4;
                ra2 = 3'h5;
                bwd = rd2;
                brsel = 2'h0;
                bwe = 1'h1;
                D_states_d = 8'h54;
                D_debug_dff_d = 7'h4d;
            end
            8'h54: begin
                if (~ddr) begin
                    alufn = 6'h1;
                    bsel = 4'h1;
                    we = 1'h1;
                    ra1 = 3'h4;
                    wdsel = 4'h0;
                    wa = 3'h4;
                    brsel = 2'h1;
                    D_states_d = 8'h55;
                end
                D_debug_dff_d = 7'h4e;
            end
            8'h55: begin
                we = 1'h1;
                wdsel = 4'h4;
                wa = 3'h5;
                D_states_d = 8'h56;
                D_debug_dff_d = 7'h4f;
            end
            8'h56: begin
                ra1 = 3'h4;
                bwe = 1'h1;
                bwd = 2'h3;
                brsel = 2'h0;
                D_states_d = 8'h4d;
                D_debug_dff_d = 7'h50;
            end
            8'h57: begin
                ra1 = 3'h5;
                if (move_right_button) begin
                    if (select_button) begin
                        if (~(|rd1[1'h1:1'h0])) begin
                            D_states_d = 8'h59;
                        end else begin
                            D_states_d = 8'h5d;
                        end
                    end else begin
                        if (deselect_button) begin
                            if (rd1[1'h1]) begin
                                D_states_d = 8'h5b;
                            end else begin
                                D_states_d = 8'h5d;
                            end
                        end else begin
                            D_states_d = 8'h5d;
                        end
                    end
                end else begin
                    D_states_d = 8'h31;
                end
                D_debug_dff_d = 7'h50;
            end
            8'h58: begin
                if (move_right_button) begin
                    if (D_accel_edge_buff_q) begin
                        
                        case (D_accel_timer_q)
                            4'hf: begin
                                D_accel_timer_d = D_accel_timer_q;
                            end
                            default: begin
                                D_accel_timer_d = D_accel_timer_q + 1'h1;
                            end
                        endcase
                        D_accel_d = 1'h0;
                        D_states_d = 8'h57;
                    end
                end else begin
                    D_accel_timer_d = 1'h0;
                    D_accel_selector_d = 1'h0;
                    D_states_d = 8'h57;
                end
                D_debug_dff_d = 7'h51;
            end
            8'h59: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h3;
                wdsel = 4'h0;
                wa = 2'h3;
                D_states_d = 8'h5a;
                D_debug_dff_d = 7'h52;
            end
            8'h5a: begin
                we = 1'h1;
                wdsel = 4'h3;
                wa = 3'h5;
                D_states_d = 8'h5d;
                D_debug_dff_d = 7'h53;
            end
            8'h5b: begin
                alufn = 6'h1;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h3;
                wdsel = 4'h0;
                wa = 2'h3;
                D_states_d = 8'h5c;
                D_debug_dff_d = 7'h54;
            end
            8'h5c: begin
                we = 1'h1;
                wdsel = 4'h1;
                wa = 3'h5;
                D_states_d = 8'h5d;
                D_debug_dff_d = 7'h55;
            end
            8'h5d: begin
                ra1 = 3'h4;
                
                case (rd1[3'h5:1'h0])
                    6'h3f: begin
                        D_states_d = 8'h58;
                    end
                    default: begin
                        D_states_d = 8'h5e;
                    end
                endcase
                D_debug_dff_d = 7'h56;
            end
            8'h5e: begin
                bsel = 4'h0;
                ra1 = 3'h4;
                ra2 = 3'h5;
                bwd = rd2;
                brsel = 2'h0;
                bwe = 1'h1;
                D_states_d = 8'h5f;
                D_debug_dff_d = 7'h57;
            end
            8'h5f: begin
                if (~ddr) begin
                    alufn = 6'h0;
                    bsel = 4'h1;
                    we = 1'h1;
                    ra1 = 3'h4;
                    wdsel = 4'h0;
                    wa = 3'h4;
                    brsel = 2'h1;
                    bwe = 1'h1;
                    D_states_d = 8'h60;
                end
                D_debug_dff_d = 7'h58;
            end
            8'h60: begin
                we = 1'h1;
                wdsel = 4'h4;
                wa = 3'h5;
                D_states_d = 8'h61;
                D_debug_dff_d = 7'h59;
            end
            8'h61: begin
                ra1 = 3'h4;
                bwe = 1'h1;
                bwd = 2'h3;
                brsel = 2'h0;
                D_states_d = 8'h58;
                D_debug_dff_d = 7'h5a;
            end
            8'h62: begin
                bsel = 4'h0;
                ra1 = 3'h4;
                ra2 = 3'h5;
                bwd = rd2;
                brsel = 2'h0;
                bwe = 1'h1;
                D_states_d = 8'h63;
                D_debug_dff_d = 8'h9b;
            end
            8'h63: begin
                we = 1'h1;
                wdsel = 4'h9;
                wa = 3'h4;
                D_states_d = 8'h64;
                D_debug_dff_d = 8'h9c;
            end
            8'h64: begin
                if (D_decrease_timer_q) begin
                    D_decrease_timer_d = 1'h0;
                    D_states_d = 8'h65;
                end else begin
                    if (D_game_tick_q) begin
                        D_game_tick_d = 1'h0;
                        D_states_d = 8'h67;
                    end
                end
                D_debug_dff_d = 7'h5b;
            end
            8'h65: begin
                alufn = 6'h1;
                bsel = 4'h1;
                we = 1'h1;
                wdsel = 4'h0;
                ra1 = 3'h6;
                wa = 3'h6;
                D_states_d = 8'h64;
                D_debug_dff_d = 8'h9b;
            end
            8'h66: begin
                if (next_start_button) begin
                    D_states_d = 8'ha7;
                end
                D_debug_dff_d = 7'h5c;
            end
            8'h67: begin
                ra1 = 3'h4;
                
                case (rd1[3'h5:1'h0])
                    6'h3f: begin
                        D_states_d = 8'h74;
                    end
                    6'h0: begin
                        D_states_d = 8'h68;
                    end
                    default: begin
                        D_states_d = 8'h70;
                    end
                endcase
                D_debug_dff_d = 7'h5d;
            end
            8'h68: begin
                if (~ddr) begin
                    ra1 = 3'h4;
                    ra2 = 3'h4;
                    alufn = 6'h1;
                    srst = 1'h1;
                    D_bram_read_d = 1'h1;
                    D_states_d = 8'h69;
                end
                D_debug_dff_d = 7'h5e;
            end
            8'h69: begin
                if (D_bram_read_q) begin
                    swe1 = 1'h1;
                    swe2 = 1'h1;
                    swe3 = 1'h1;
                    D_bram_read_d = 1'h0;
                end
                if (~ddr) begin
                    alufn = 6'h1;
                    bsel = 4'h4;
                    ra1 = 3'h4;
                    D_bram_read_d = 1'h1;
                    D_states_d = 8'h6a;
                end
                D_debug_dff_d = 7'h5f;
            end
            8'h6a: begin
                if (D_bram_read_q) begin
                    swe1 = 1'h1;
                    D_bram_read_d = 1'h0;
                end
                if (~ddr) begin
                    alufn = 6'h1;
                    bsel = 4'h5;
                    ra1 = 3'h4;
                    D_bram_read_d = 1'h1;
                    D_states_d = 8'h6b;
                end
                D_debug_dff_d = 7'h60;
            end
            8'h6b: begin
                if (D_bram_read_q) begin
                    swe1 = 1'h1;
                    D_bram_read_d = 1'h0;
                end
                if (~ddr) begin
                    alufn = 6'h1a;
                    ra1 = 3'h4;
                    D_bram_read_d = 1'h1;
                    D_states_d = 8'h6c;
                end
                D_debug_dff_d = 8'h9e;
            end
            8'h6c: begin
                if (D_bram_read_q) begin
                    swe2 = 1'h1;
                    D_bram_read_d = 1'h0;
                end
                if (~ddr) begin
                    alufn = 6'h0;
                    bsel = 4'h1;
                    ra1 = 3'h4;
                    D_bram_read_d = 1'h1;
                    D_states_d = 8'h6d;
                end
                D_debug_dff_d = 7'h61;
            end
            8'h6d: begin
                if (D_bram_read_q) begin
                    swe2 = 1'h1;
                    D_bram_read_d = 1'h0;
                end
                if (~ddr) begin
                    alufn = 6'h0;
                    bsel = 4'h4;
                    ra1 = 3'h4;
                    D_bram_read_d = 1'h1;
                    D_states_d = 8'h6e;
                end
                D_debug_dff_d = 7'h62;
            end
            8'h6e: begin
                if (D_bram_read_q) begin
                    swe3 = 1'h1;
                    D_bram_read_d = 1'h0;
                end
                if (~ddr) begin
                    alufn = 6'h0;
                    bsel = 4'hb;
                    ra1 = 3'h4;
                    D_bram_read_d = 1'h1;
                    D_states_d = 8'h6f;
                end
                D_debug_dff_d = 7'h63;
            end
            8'h6f: begin
                swe3 = 1'h1;
                D_bram_read_d = 1'h0;
                D_states_d = 8'h76;
                D_debug_dff_d = 7'h64;
            end
            8'h70: begin
                if (~ddr) begin
                    alufn = 6'h1;
                    bsel = 4'h5;
                    ra1 = 3'h4;
                    D_bram_read_d = 1'h1;
                    D_states_d = 8'h71;
                end
                D_debug_dff_d = 7'h65;
            end
            8'h71: begin
                if (D_bram_read_q) begin
                    swe1 = 1'h1;
                    D_bram_read_d = 1'h0;
                end
                if (~ddr) begin
                    alufn = 6'h0;
                    bsel = 4'h1;
                    ra1 = 3'h4;
                    D_bram_read_d = 1'h1;
                    D_states_d = 8'h72;
                end
                D_debug_dff_d = 7'h66;
            end
            8'h72: begin
                if (D_bram_read_q) begin
                    swe2 = 1'h1;
                    D_bram_read_d = 1'h0;
                end
                if (~ddr) begin
                    alufn = 6'h0;
                    bsel = 4'hb;
                    ra1 = 3'h4;
                    D_bram_read_d = 1'h1;
                    D_states_d = 8'h73;
                end
                D_debug_dff_d = 7'h67;
            end
            8'h73: begin
                swe3 = 1'h1;
                D_bram_read_d = 1'h0;
                D_states_d = 8'h76;
                D_debug_dff_d = 7'h68;
            end
            8'h74: begin
                ra1 = 3'h4;
                ra2 = 3'h4;
                alufn = 6'h1;
                D_states_d = 8'h75;
            end
            8'h75: begin
                swe1 = 1'h1;
                swe2 = 1'h1;
                swe3 = 1'h1;
                D_states_d = 8'h76;
                D_debug_dff_d = 7'h69;
            end
            8'h76: begin
                sre1 = 1'h1;
                
                case (srd1)
                    2'h1: begin
                        D_states_d = 8'h77;
                    end
                    2'h2: begin
                        D_states_d = 8'h78;
                    end
                    2'h0: begin
                        D_states_d = 8'h79;
                    end
                endcase
                D_debug_dff_d = 7'h6a;
            end
            8'h77: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h0;
                wdsel = 4'h0;
                wa = 1'h0;
                D_states_d = 8'h79;
                D_debug_dff_d = 7'h6b;
            end
            8'h78: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h1;
                wdsel = 4'h0;
                wa = 1'h1;
                D_states_d = 8'h79;
                D_debug_dff_d = 7'h6c;
            end
            8'h79: begin
                sre1 = 1'h1;
                
                case (srd1)
                    2'h1: begin
                        D_states_d = 8'h7a;
                    end
                    2'h2: begin
                        D_states_d = 8'h7b;
                    end
                    2'h0: begin
                        D_states_d = 8'h7c;
                    end
                endcase
                D_debug_dff_d = 7'h6d;
            end
            8'h7a: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h0;
                wdsel = 4'h0;
                wa = 1'h0;
                D_states_d = 8'h7c;
                D_debug_dff_d = 7'h6e;
            end
            8'h7b: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h1;
                wdsel = 4'h0;
                wa = 1'h1;
                D_states_d = 8'h7c;
                D_debug_dff_d = 7'h6f;
            end
            8'h7c: begin
                sre1 = 1'h1;
                
                case (srd1)
                    2'h1: begin
                        D_states_d = 8'h7d;
                    end
                    2'h2: begin
                        D_states_d = 8'h7e;
                    end
                    2'h0: begin
                        D_states_d = 8'h7f;
                    end
                endcase
                D_debug_dff_d = 7'h70;
            end
            8'h7d: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h0;
                wdsel = 4'h0;
                wa = 1'h0;
                D_states_d = 8'h7f;
                D_debug_dff_d = 7'h71;
            end
            8'h7e: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h1;
                wdsel = 4'h0;
                wa = 1'h1;
                D_states_d = 8'h7f;
                D_debug_dff_d = 7'h72;
            end
            8'h7f: begin
                sre2 = 1'h1;
                
                case (srd2)
                    2'h1: begin
                        D_states_d = 8'h80;
                    end
                    2'h2: begin
                        D_states_d = 8'h81;
                    end
                    2'h0: begin
                        D_states_d = 8'h82;
                    end
                endcase
                D_debug_dff_d = 7'h73;
            end
            8'h80: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h0;
                wdsel = 4'h0;
                wa = 1'h0;
                D_states_d = 8'h82;
                D_debug_dff_d = 7'h74;
            end
            8'h81: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h1;
                wdsel = 4'h0;
                wa = 1'h1;
                D_states_d = 8'h82;
                D_debug_dff_d = 7'h75;
            end
            8'h82: begin
                we = 1'h1;
                wdsel = 4'h5;
                wa = 3'h5;
                sre2 = 1'h1;
                D_states_d = 8'h83;
                D_debug_dff_d = 7'h76;
            end
            8'h83: begin
                sre2 = 1'h1;
                
                case (srd2)
                    2'h1: begin
                        D_states_d = 8'h84;
                    end
                    2'h2: begin
                        D_states_d = 8'h85;
                    end
                    2'h0: begin
                        D_states_d = 8'h86;
                    end
                endcase
                D_debug_dff_d = 7'h77;
            end
            8'h84: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h0;
                wdsel = 4'h0;
                wa = 1'h0;
                D_states_d = 8'h86;
                D_debug_dff_d = 7'h78;
            end
            8'h85: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h1;
                wdsel = 4'h0;
                wa = 1'h1;
                D_states_d = 8'h86;
                D_debug_dff_d = 7'h79;
            end
            8'h86: begin
                sre3 = 1'h1;
                
                case (srd3)
                    2'h1: begin
                        D_states_d = 8'h87;
                    end
                    2'h2: begin
                        D_states_d = 8'h88;
                    end
                    2'h0: begin
                        D_states_d = 8'h89;
                    end
                endcase
                D_debug_dff_d = 7'h7a;
            end
            8'h87: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h0;
                wdsel = 4'h0;
                wa = 1'h0;
                D_states_d = 8'h89;
                D_debug_dff_d = 7'h7b;
            end
            8'h88: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h1;
                wdsel = 4'h0;
                wa = 1'h1;
                D_states_d = 8'h89;
                D_debug_dff_d = 7'h7c;
            end
            8'h89: begin
                sre3 = 1'h1;
                
                case (srd3)
                    2'h1: begin
                        D_states_d = 8'h8a;
                    end
                    2'h2: begin
                        D_states_d = 8'h8b;
                    end
                    2'h0: begin
                        D_states_d = 8'h8c;
                    end
                endcase
                D_debug_dff_d = 7'h7d;
            end
            8'h8a: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h0;
                wdsel = 4'h0;
                wa = 1'h0;
                D_states_d = 8'h8c;
                D_debug_dff_d = 7'h7e;
            end
            8'h8b: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h1;
                wdsel = 4'h0;
                wa = 1'h1;
                D_states_d = 8'h8c;
                D_debug_dff_d = 7'h7f;
            end
            8'h8c: begin
                sre3 = 1'h1;
                
                case (srd3)
                    2'h1: begin
                        D_states_d = 8'h8d;
                    end
                    2'h2: begin
                        D_states_d = 8'h8e;
                    end
                    2'h0: begin
                        D_states_d = 8'h8f;
                    end
                endcase
                D_debug_dff_d = 8'h80;
            end
            8'h8d: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h0;
                wdsel = 4'h0;
                wa = 1'h0;
                D_states_d = 8'h8f;
                D_debug_dff_d = 8'h81;
            end
            8'h8e: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 1'h1;
                wdsel = 4'h0;
                wa = 1'h1;
                D_states_d = 8'h8f;
                D_debug_dff_d = 8'h82;
            end
            8'h8f: begin
                sre1 = 1'h1;
                sre2 = 1'h1;
                sre3 = 1'h1;
                D_states_d = 8'h90;
                D_debug_dff_d = 8'h83;
            end
            8'h90: begin
                sre1 = 1'h1;
                sre2 = 1'h1;
                sre3 = 1'h1;
                D_states_d = 8'h91;
                D_debug_dff_d = 8'h84;
            end
            8'h91: begin
                ra1 = 3'h5;
                
                case (rd1)
                    2'h0: begin
                        D_states_d = 8'h92;
                    end
                    2'h2: begin
                        D_states_d = 8'h97;
                    end
                    2'h1: begin
                        D_states_d = 8'h9a;
                    end
                endcase
                D_debug_dff_d = 8'h85;
            end
            8'h92: begin
                ra1 = 1'h0;
                ra2 = 1'h1;
                if (rd1 == rd2) begin
                    D_states_d = 8'h9f;
                end else begin
                    D_states_d = 8'h93;
                end
                D_debug_dff_d = 8'h86;
            end
            8'h93: begin
                ra1 = 1'h0;
                if (rd1 == 2'h3) begin
                    D_states_d = 8'h95;
                end else begin
                    D_states_d = 8'h94;
                end
                D_debug_dff_d = 8'h87;
            end
            8'h94: begin
                ra1 = 1'h1;
                if (rd1 == 2'h3) begin
                    D_states_d = 8'h96;
                end else begin
                    D_states_d = 8'h9f;
                end
                D_debug_dff_d = 8'h88;
            end
            8'h96: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h3;
                wdsel = 4'h0;
                wa = 2'h3;
                D_states_d = 8'h9e;
                D_debug_dff_d = 8'h89;
            end
            8'h95: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h2;
                wdsel = 4'h0;
                wa = 2'h2;
                D_states_d = 8'h9d;
                D_debug_dff_d = 8'h8a;
            end
            8'h97: begin
                ra1 = 1'h0;
                ra2 = 1'h1;
                if (rd1[2'h3:1'h0] < rd2[2'h3:1'h0]) begin
                    D_states_d = 8'h98;
                end else begin
                    D_states_d = 8'h99;
                end
                D_debug_dff_d = 8'h8b;
            end
            8'h98: begin
                ra1 = 1'h1;
                
                case (rd1[1'h1:1'h0])
                    2'h2: begin
                        D_states_d = 8'h9e;
                    end
                    2'h3: begin
                        D_states_d = 8'h9e;
                    end
                    default: begin
                        D_states_d = 8'h99;
                    end
                endcase
                D_debug_dff_d = 8'h8c;
            end
            8'h99: begin
                alufn = 6'h1;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h3;
                wdsel = 4'h0;
                wa = 2'h3;
                D_states_d = 8'h9f;
                D_debug_dff_d = 8'h8e;
            end
            8'h9a: begin
                ra1 = 1'h0;
                ra2 = 1'h1;
                if (rd2[2'h3:1'h0] < rd1[2'h3:1'h0]) begin
                    D_states_d = 8'h9b;
                end else begin
                    D_states_d = 8'h9c;
                end
                D_debug_dff_d = 8'h8f;
            end
            8'h9b: begin
                ra1 = 1'h0;
                
                case (rd1[1'h1:1'h0])
                    2'h2: begin
                        D_states_d = 8'h9d;
                    end
                    2'h3: begin
                        D_states_d = 8'h9d;
                    end
                    default: begin
                        D_states_d = 8'h9c;
                    end
                endcase
                D_debug_dff_d = 8'h90;
            end
            8'h9c: begin
                alufn = 6'h1;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 2'h2;
                wdsel = 4'h0;
                wa = 2'h2;
                D_states_d = 8'h9f;
                D_debug_dff_d = 8'h91;
            end
            8'h9d: begin
                ra1 = 3'h4;
                bwe = 1'h1;
                bwd = 2'h1;
                D_states_d = 8'ha0;
                D_debug_dff_d = 8'h92;
            end
            8'h9e: begin
                ra1 = 3'h4;
                bwe = 1'h1;
                bwd = 2'h2;
                D_states_d = 8'ha0;
                D_debug_dff_d = 8'h93;
            end
            8'h9f: begin
                ra1 = 3'h4;
                bwe = 1'h1;
                bwd = 2'h0;
                D_states_d = 8'ha0;
                D_debug_dff_d = 8'h94;
            end
            8'ha0: begin
                we = 1'h1;
                wa = 1'h0;
                wdsel = 4'h1;
                D_states_d = 8'ha1;
                D_debug_dff_d = 8'h95;
            end
            8'ha1: begin
                we = 1'h1;
                wa = 1'h1;
                wdsel = 4'h1;
                D_states_d = 8'ha2;
                D_debug_dff_d = 8'h96;
            end
            8'ha2: begin
                alufn = 6'h0;
                bsel = 4'h1;
                we = 1'h1;
                ra1 = 3'h4;
                wdsel = 4'h0;
                wa = 3'h4;
                D_states_d = 8'ha3;
                D_debug_dff_d = 8'h97;
            end
            8'ha3: begin
                ra1 = 3'h4;
                
                case (rd1)
                    13'h103f: begin
                        D_states_d = 8'ha4;
                    end
                    default: begin
                        D_states_d = 8'h64;
                    end
                endcase
                D_debug_dff_d = 8'h98;
            end
            8'ha4: begin
                if (~ddr) begin
                    alufn = 6'h16;
                    bsel = 4'h1;
                    ra1 = 3'h7;
                    we = 1'h1;
                    wa = 3'h7;
                    wdsel = 4'h0;
                    D_states_d = 8'ha5;
                end
                D_debug_dff_d = 8'h99;
            end
            8'ha5: begin
                if (~(|timer)) begin
                    D_states_d = 8'h66;
                end else begin
                    if (~(|pac)) begin
                        D_states_d = 8'h66;
                    end else begin
                        if (~(|pbc)) begin
                            D_states_d = 8'h66;
                        end else begin
                            D_states_d = 8'ha6;
                        end
                    end
                end
            end
            8'ha6: begin
                we = 1'h1;
                wa = 3'h4;
                wdsel = 4'h9;
                D_states_d = 8'h64;
                D_debug_dff_d = 8'h9a;
            end
        endcase
    end
    
    
    always @(posedge (clk)) begin
        D_decrease_timer_q <= D_decrease_timer_d;
        D_game_tick_q <= D_game_tick_d;
        D_accel_selector_q <= D_accel_selector_d;
        D_accel_timer_q <= D_accel_timer_d;
        D_accel_q <= D_accel_d;
        D_accel_edge_buff_q <= D_accel_edge_buff_d;
        
    end
    always @(posedge (clk)) begin
        if ((rst) == 1'b1) begin
            D_states_q <= 8'ha7;
            D_bram_read_q <= 0;
            D_debug_dff_q <= 0;
        end else begin
            D_states_q <= D_states_d;
            D_bram_read_q <= D_bram_read_d;
            D_debug_dff_q <= D_debug_dff_d;
        end
    end
endmodule