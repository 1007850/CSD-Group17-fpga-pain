/*
    This file was generated automatically by Alchitry Labs 2.0.30-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module regfile #(
        parameter WIDTH = 6'h20,
        parameter ENTRIES = 4'h8
    ) (
        input wire clk,
        input wire rst,
        input wire [($clog2(ENTRIES))-1:0] ra1,
        input wire [($clog2(ENTRIES))-1:0] ra2,
        output reg [(WIDTH)-1:0] rd1,
        output reg [(WIDTH)-1:0] rd2,
        input wire [($clog2(ENTRIES))-1:0] wa,
        input wire we,
        input wire [(WIDTH)-1:0] wd,
        output reg [(WIDTH)-1:0] pac,
        output reg [(WIDTH)-1:0] pbc,
        output reg [(WIDTH)-1:0] timer,
        output reg bram_selector,
        output reg [12:0] targetpixel
    );
    logic [(ENTRIES)-1:0][(WIDTH)-1:0] D_registers_d, D_registers_q = 0;
    always @* begin
        D_registers_d = D_registers_q;
        
        targetpixel = D_registers_q[3'h4];
        rd1 = D_registers_q[ra1];
        rd2 = D_registers_q[ra2];
        pac = D_registers_q[2'h2];
        pbc = D_registers_q[2'h3];
        timer = D_registers_q[3'h6];
        bram_selector = D_registers_q[3'h7][1'h0];
        if (we) begin
            D_registers_d[wa] = wd;
        end
    end
    
    
    always @(posedge (clk)) begin
        if ((rst) == 1'b1) begin
            D_registers_q <= 0;
        end else begin
            D_registers_q <= D_registers_d;
        end
    end
endmodule