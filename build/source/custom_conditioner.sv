/*
    This file was generated automatically by Alchitry Labs 2.0.30-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module custom_conditioner #(
        parameter MIN_DELAY = 8'hc8,
        parameter CLK_FREQ = 27'h5f5e100
    ) (
        input wire clk,
        input wire rst,
        input wire in,
        output reg out
    );
    logic [($clog2(CLK_FREQ * MIN_DELAY / 10'h3e8))-1:0] D_delay_d, D_delay_q = 0;
    logic D_button_state_d, D_button_state_q = 0;
    always @* begin
        D_delay_d = D_delay_q;
        D_button_state_d = D_button_state_q;
        
        D_delay_d = D_delay_q;
        D_button_state_d = D_button_state_q;
        if (D_button_state_q) begin
            if (~in && (&D_delay_q)) begin
                D_button_state_d = 1'h0;
            end else begin
                if (~(&D_delay_q)) begin
                    D_delay_d = D_delay_q + 1'h1;
                end
            end
        end else begin
            if (in && ~(|D_delay_q)) begin
                D_button_state_d = 1'h1;
            end else begin
                if ((|D_delay_q)) begin
                    D_delay_d = D_delay_q - 1'h1;
                end
            end
        end
        out = D_button_state_q;
    end
    
    
    always @(posedge (clk)) begin
        D_delay_q <= D_delay_d;
        
    end
    always @(posedge (clk)) begin
        if ((rst) == 1'b1) begin
            D_button_state_q <= 0;
        end else begin
            D_button_state_q <= D_button_state_d;
        end
    end
endmodule