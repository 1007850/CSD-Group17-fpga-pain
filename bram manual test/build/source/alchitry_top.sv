/*
    This file was generated automatically by Alchitry Labs 2.0.30-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module alchitry_top (
        input wire clk,
        input wire rst_n,
        output reg [7:0] led,
        input wire usb_rx,
        output reg usb_tx
    );
    localparam CLK = 24'h895440;
    logic rst;
    localparam _MP_STAGES_1176374610 = 3'h4;
    logic M_reset_cond_in;
    logic M_reset_cond_out;
    
    reset_conditioner #(
        .STAGES(_MP_STAGES_1176374610)
    ) reset_cond (
        .clk(clk),
        .in(M_reset_cond_in),
        .out(M_reset_cond_out)
    );
    
    
    localparam _MP_WIDTH_605326102 = 2'h2;
    localparam _MP_ENTRIES_605326102 = 13'h1080;
    logic M_brams_bram_selector;
    logic [1:0] M_brams_brsel;
    logic [12:0] M_brams_bra;
    logic [12:0] M_brams_bwa;
    logic [12:0] M_brams_bra_override;
    logic M_brams_ro;
    logic M_brams_bwe;
    logic [1:0] M_brams_bwd;
    logic [1:0] M_brams_brd;
    
    bram #(
        .WIDTH(_MP_WIDTH_605326102),
        .ENTRIES(_MP_ENTRIES_605326102)
    ) brams (
        .clk(clk),
        .rst(rst),
        .bram_selector(M_brams_bram_selector),
        .brsel(M_brams_brsel),
        .bra(M_brams_bra),
        .bwa(M_brams_bwa),
        .bra_override(M_brams_bra_override),
        .ro(M_brams_ro),
        .bwe(M_brams_bwe),
        .bwd(M_brams_bwd),
        .brd(M_brams_brd)
    );
    
    
    localparam _MP_SIZE_445830537 = 2'h2;
    localparam _MP_DIV_445830537 = 1'h0;
    localparam _MP_TOP_445830537 = 2'h2;
    localparam _MP_UP_445830537 = 1'h1;
    logic [1:0] M_cnt_value;
    
    counter #(
        .SIZE(_MP_SIZE_445830537),
        .DIV(_MP_DIV_445830537),
        .TOP(_MP_TOP_445830537),
        .UP(_MP_UP_445830537)
    ) cnt (
        .clk(clk),
        .rst(rst),
        .value(M_cnt_value)
    );
    
    
    always @* begin
        M_reset_cond_in = ~rst_n;
        rst = M_reset_cond_out;
        led = 8'h0;
        usb_tx = usb_rx;
        M_brams_bram_selector = 1'h0;
        M_brams_brsel = 1'h0;
        M_brams_bra = 1'h0;
        M_brams_bwa = 1'h0;
        M_brams_bra_override = 1'h0;
        M_brams_ro = 1'h0;
        M_brams_bwe = 1'h0;
        M_brams_bwd = 1'h0;
        
        case (M_cnt_value)
            2'h0: begin
                M_brams_brsel = 1'h0;
                M_brams_bwa = 10'h26f;
                M_brams_bwd = 2'h3;
                M_brams_bwe = 1'h1;
            end
            2'h1: begin
                M_brams_brsel = 1'h1;
                M_brams_bra_override = 10'h26f;
                M_brams_ro = 1'h1;
            end
            2'h2: begin
                M_brams_brsel = 1'h1;
                led[2'h2:1'h1] = M_brams_brd;
            end
        endcase
    end
    
    
endmodule