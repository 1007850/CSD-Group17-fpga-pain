module regfile #(
    WIDTH ~ 32 : WIDTH > 1
    ENTRIES ~ 8 : ENTRIES > 1
    // address width will be 3 with 8 entries
) (
    input clk,
    input rst,
    input ra1[$clog2(ENTRIES)],     // read address 1
    input ra2[$clog2(ENTRIES)],     // read address 2
    output rd1[WIDTH],              // read data 1
    output rd2[WIDTH],              // read data 2
    input wa[$clog2(ENTRIES)],      // write address
    input we,                       // write enable
    input wd[WIDTH],                // write data
    output pac[WIDTH],              // player B cell count
    output pbc[WIDTH],              // player A cell count
    output timer[WIDTH],            // timer countdown, seconds
    output brsel                    // bram selector
) {
  

    dff registers[ENTRIES][WIDTH](.clk(clk), .rst(rst));
  
    always {
      
        // always read 
        rd1 = registers.q[ra1];
        rd2 = registers.q[ra2];
        pac = registers.q[$resize(2,$clog2(ENTRIES))]
        pbc = registers.q[$resize(3,$clog2(ENTRIES))]
        timer = registers.q[$resize(6,$clog2(ENTRIES))]
        brsel = registers.q[$resize(7,$clog2(ENTRIES))][0]       

        // check if write_en and its not R31 
        if (write_enable){
            registers.d[wa] = wd
        }
    }
}