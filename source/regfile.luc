module regfile #(
    WIDTH = 32 : WIDTH > 1,
    ENTRIES = 8 : ENTRIES > 1
    // address width will be 3 with 8 entries
) (
    input clk,
    input rst,
    input ra1[$clog2(ENTRIES)],     // read address 1
    input ra2[$clog2(ENTRIES)],     // read address 2
    output rd1[WIDTH],              // read data 1
    output rd2[WIDTH],              // read data 2
    input wa[$clog2(ENTRIES)],      // write address
    input we,                       // write enable
    input wd[WIDTH],                // write data
    output pac[WIDTH],              // player A cell count
    output pbc[WIDTH],              // player B cell count
    output timer[WIDTH],            // timer countdown, seconds
    output bram_selector            // bram selector
) {

    dff registers[ENTRIES][WIDTH](.clk(clk),.rst(rst))
  
    always {
    
        // always read 
        rd1 = registers.q[ra1]
        rd2 = registers.q[ra2]
        pac = registers.q[2]
        pbc = registers.q[3]
        timer = registers.q[6]
        bram_selector = registers.q[7][0]   // LSB

        // check if write_en and its not R31 
        if (we){
            registers.d[wa] = wd
        }
    }
}