module fsm #(
) (
    input clk,  // clock
    input rst,  // reset
    
    // buttons
    input next_start_button,
    input reset_button,
    
    // movement buttons
    input move_up_button,
    input move_down_button,
    input move_left_button,
    input move_right_button,
    
    //input play_button,
    
    input deselect_button,
    input select_button,
    
    input pac,
    input pbc,
    input timer,
    input brd,
    input ddr,
    
    // alu
    input rd1[32],
    input rd2[32],
    input aluout[32],

    // game clock
    input game_clk,

    // BRAM
    output brsel[2],         // selector override
    output bra[13],          // read address
    output bwa[13],          // write address
    output bwe,              // write enable
    output bwd[2],           // write data
    
    output ra1[32],
    output ra2[32],
    output wa[3],
    output we,
    output alufn[6],
    output asel,
    output bsel[4],
    output wdsel[4],

    // shift registers
    output srst1,
    output srst2,
    output srst3,

    input srd1[2],
    input srd2[2],
    input srd3[2],

    output swe1,
    output swd1[2],
    output sre1,

    output swe2,
    output swd2,
    output sre2,

    output swe3,
    output swd3,
    output sre3, 
    output out
    
    
) {
    enum States {
        A_INPUT_IDLE, A_SET_PIXEL_A, A_SET_PIXEL_0, 
        
        A_UP_DIR_IDLE, A_UP_COUNTP1, A_UP_SET_PIXEL_A, A_UP_COUNTM1, A_UP_SET_PIXEL_0, A_UP_CHECK_PIXEL, A_UP_RESET_PIXEL, A_UP_MOVE_CURSOR, A_UP_STORE_PIXEL, A_UP_CURSOR_COLOUR, 
        A_DOWN_DIR_IDLE, A_DOWN_COUNTP1, A_DOWN_SET_PIXEL_A, A_DOWN_COUNTM1, A_DOWN_SET_PIXEL_0, A_DOWN_CHECK_PIXEL, A_DOWN_RESET_PIXEL, A_DOWN_MOVE_CURSOR, A_DOWN_STORE_PIXEL, A_DOWN_CURSOR_COLOUR, 
        A_LEFT_DIR_IDLE, A_LEFT_COUNTP1, A_LEFT_SET_PIXEL_A, A_LEFT_COUNTM1, A_LEFT_SET_PIXEL_0, A_LEFT_CHECK_PIXEL, A_LEFT_RESET_PIXEL, A_LEFT_MOVE_CURSOR, A_LEFT_STORE_PIXEL, A_LEFT_CURSOR_COLOUR, 
        A_RIGHT_DIR_IDLE, A_RIGHT_COUNTP1, A_RIGHT_SET_PIXEL_A, A_RIGHT_COUNTM1, A_RIGHT_SET_PIXEL_0, A_RIGHT_CHECK_PIXEL, A_RIGHT_RESET_PIXEL, A_RIGHT_MOVE_CURSOR, A_RIGHT_STORE_PIXEL, A_RIGHT_CURSOR_COLOUR, 
        
        B_INPUT_IDLE, B_SET_PIXEL_B, B_SET_PIXEL_0, 
        
        B_UP_DIR_IDLE, B_UP_COUNTP1, B_UP_SET_PIXEL_B, B_UP_COUNTM1, B_UP_SET_PIXEL_0, B_UP_CHECK_PIXEL, B_UP_RESET_PIXEL, B_UP_MOVE_CURSOR, B_UP_STORE_PIXEL, B_UP_CURSOR_COLOUR, 
        B_DOWN_DIR_IDLE, B_DOWN_COUNTP1, B_DOWN_SET_PIXEL_B, B_DOWN_COUNTM1, B_DOWN_SET_PIXEL_0, B_DOWN_CHECK_PIXEL, B_DOWN_RESET_PIXEL, B_DOWN_MOVE_CURSOR, B_DOWN_STORE_PIXEL, B_DOWN_CURSOR_COLOUR, 
        B_LEFT_DIR_IDLE, B_LEFT_COUNTP1, B_LEFT_SET_PIXEL_B, B_LEFT_COUNTM1, B_LEFT_SET_PIXEL_0, B_LEFT_CHECK_PIXEL, B_LEFT_RESET_PIXEL, B_LEFT_MOVE_CURSOR, B_LEFT_STORE_PIXEL, B_LEFT_CURSOR_COLOUR, 
        B_RIGHT_DIR_IDLE, B_RIGHT_COUNTP1, B_RIGHT_SET_PIXEL_B, B_RIGHT_COUNTM1, B_RIGHT_SET_PIXEL_0, B_RIGHT_CHECK_PIXEL, B_RIGHT_RESET_PIXEL, B_RIGHT_MOVE_CURSOR, B_RIGHT_STORE_PIXEL, B_RIGHT_CURSOR_COLOUR,        
        GAME_IDLE, TIMER_M1, END_GAME, 
        
        GAME_IDLE_READ_CURR_PIXEL_VALUE, 
        
        RESET_SR_POINTERS, SR_00_ALL_SR, SR_LOAD_TOP_MID, SR_LOAD_TOP_RIGHT, SR_LOAD_MID_MID, SR_LOAD_MID_RIGHT, SR_LOAD_BOT_MID, SR_LOAD_BOT_RIGHT, 
        READ_BRAM, RB_LOAD_TOP_RIGHT, RB_LOAD_MID_RIGHT, RB_LOAD_BOT_RIGHT, 
        READ_CURR_PIXEL_VALUE_00_ALL_SR, 
        
        READ_TOP_LEFT, TOP_LEFT_ADD_A_NEIGHBOUR, TOP_LEFT_ADD_B_NEIGHBOUR, 
        READ_TOP_MID, TOP_MID_ADD_A_NEIGHBOUR, TOP_MID_ADD_B_NEIGHBOUR, 
        READ_TOP_RIGHT, TOP_RIGHT_ADD_A_NEIGHBOUR, TOP_RIGHT_ADD_B_NEIGHBOUR, 
        READ_MID_LEFT, MID_LEFT_ADD_A_NEIGHBOUR, MID_LEFT_ADD_B_NEIGHBOUR, 
        READ_TARGET_PIXEL, 
        READ_MID_RIGHT, MID_RIGHT_ADD_A_NEIGHBOUR, MID_RIGHT_ADD_B_NEIGHBOUR, 
        READ_BOT_LEFT, BOT_LEFT_ADD_A_NEIGHBOUR, BOT_LEFT_ADD_B_NEIGHBOUR, 
        READ_BOT_MID, BOT_MID_ADD_A_NEIGHBOUR, BOT_MID_ADD_B_NEIGHBOUR, 
        READ_BOT_RIGHT, BOT_RIGHT_ADD_A_NEIGHBOUR, BOT_RIGHT_ADD_B_NEIGHBOUR, 
        
        SR_EMPTY_READ_1, SR_EMPTY_READ_2, 
        
        CHECK_NEIGHBOURS, 
        //current pixel is 0
        B00_CHECK_A_NEIGHBOURS_EQ_B_NEIGHBOURS, B00_CHECK_A_NEIGHBOUR_EQ_3, B00_CHECK_B_NEIGHBOUR_EQ_3, B00_A_COUNTP1, B00_B_COUNTP1, 
        //current pixel is B
        B10_CHECK_A_NEIGHBOUR_LE_B_NEIGHBOUR, B10_CHECK_B_NEIGHBOUR_EQ_2, B10_CHECK_B_NEIGHBOUR_EQ_3, B10_B_COUNTM1, 
        //current pixel is A, 
        B01_CHECK_B_NEIGHBOUR_LE_A_NEIGHBOUR, B01_CHECK_A_NEIGHBOUR_EQ_2, B01_CHECK_A_NEIGHBOUR_EQ_3, B01_A_COUNTM1, 
        
        SET_A, SET_B, SET_00, 
        
        RESET_A_NEIGHBOUR, RESET_B_NEIGHBOUR, MOVE_PIXEL_ADDRESS, CHECK_AT_LAST_PIXEL, SWITCH_BRAM, SET_PIXEL_TO_BEGINNING, 
        
        //End game
        SET_PIXEL_ADDRESS_TO_0, ZERO_BRAM, CHECK_ADDRESS_AT_MAX, SET_TIMER, RESET_PIXEL_VALUE, RESET_PIXEL_ADDRESS, SET_SELECTOR_PIXEL_STATE, 
        SET_B_LOW, 
        SET_B_HIGH, 
        COMPUTE, 
        AUTO, 
        IDLE
    }
    
    dff states[$width(States)](#INIT(States.IDLE), .clk(clk))
    dff decrease_timer(.clk(clk))

    const ADD = b000000
    const SUB = b000001
    const CMPEQ = b110011
    const CMPLT = b110101
    const CMPLE = b110111
    const XOR = b010110

    always {

        states.d = states.q
        out = 0
        brsel = b10
        bra = 0
        bwa = 0
        bwe = 0
        bwd = 0
        ra1 = 0
        ra2 = 0
        wa = 0 
        we = 0 
        alufn = 0
        asel = 0
        bsel = 0
        wdsel = 0
        srst1 = 0
        srst2 = 0
        srst3 = 0
        decrease_timer.d = 0
        if (game_clk){
            decrease_timer.d = 1
        }

        
        case (states.q){
            States.SET_PIXEL_ADDRESS_TO_0:
                we = b1
                wdsel = b0001
                wa = b100
                states.d = States.ZERO_BRAM

            States.ZERO_BRAM:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = b100
                wdsel = b0000
                wa = b100
                bwa = rd1
                bwe = b1
                bwd = b00
                states.d = States.CHECK_ADDRESS_AT_MAX

            States.CHECK_ADDRESS_AT_MAX:
                alufn = b110101
                asel = b0
                bsel = b1000
                ra1 = b100
                case(aluout[0]){
                    1:
                        states.d = States.ZERO_BRAM
                    0:
                        states.d = States.SET_TIMER
                }
            
            States.SET_TIMER:
                we = b1
                wdsel = b0110
                wa = b110
                states.d = States.RESET_PIXEL_VALUE
            
            States.RESET_PIXEL_VALUE:
                we = b1
                wdsel = b0001
                wa = b101
                states.d = States.RESET_PIXEL_ADDRESS
            
            States.RESET_PIXEL_ADDRESS:
                we = b1
                wdsel = b0111
                wa = b100
                states.d = States.SET_SELECTOR_PIXEL_STATE
            
            States.SET_SELECTOR_PIXEL_STATE:
                bwa = h860
                bwe = b1
                bwd = hB
                brsel = b00
                states.d = States.A_INPUT_IDLE
            // Player A Turn
            States.A_INPUT_IDLE:
                asel = b0
                ra1 = h5
                if (move_up_button){
                    states.d = States.A_UP_DIR_IDLE
                }
                else if (move_down_button){
                    states.d = States.A_DOWN_DIR_IDLE
                }
                else if (move_left_button){
                    states.d = States.A_LEFT_DIR_IDLE
                }
                else if (move_right_button){
                    states.d = States.A_RIGHT_DIR_IDLE
                }
                else if (select_button){
                    if (~rd2[0]){
                        states.d = States.A_SET_PIXEL_A
                    }
                }
                else if (deselect_button){
                    if (rd2[0]){
                        states.d = States.A_SET_PIXEL_0
                    }
                }
                else if (next_start_button){
                    states.d = States.B_INPUT_IDLE
                }
                

            States.A_UP_DIR_IDLE:
                alufn = b011010
                asel = b0
                ra1 = h5
                if (select_button){
                    if(~rd1[0]){
                        states.d = States.A_UP_COUNTP1
                    }
                }
                else if (deselect_button){
                    if (rd1[0]){
                        states.d = States.A_UP_COUNTM1
                    }
                }
                else if (move_up_button){
                    states.d = States.A_UP_CHECK_PIXEL
                }
            
            States.A_UP_COUNTP1:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h2
                wdsel = b0000
                wa = h2
                states.d = States.A_UP_SET_PIXEL_A
            
            States.A_UP_SET_PIXEL_A:
                we = b1 
                wdsel = b0010
                wa = h5
                states.d = States.A_UP_CHECK_PIXEL
            
            States.A_UP_COUNTM1:
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h2
                wdsel = b0000
                wa = h2
                states.d = States.A_UP_SET_PIXEL_0
            
            States.A_UP_SET_PIXEL_0:
                we = b1
                wdsel = b0001
                wa = h5
                states.d = States.A_UP_CHECK_PIXEL

            States.A_UP_CHECK_PIXEL:
                alufn = b110101
                asel = b0
                bsel = b0110
                ra1 = h4
                if(~aluout[0]){
                    states.d = States.A_UP_RESET_PIXEL
                }
                if(aluout[0]){
                    states.d = States.A_UP_DIR_IDLE
                }

            States.A_UP_RESET_PIXEL:
                asel = b0
                bsel = b0000
                ra1 = h4
                ra2 = h5
                bwa = rd1
                bwd = rd2
                brsel = b00
                states.d = States.A_UP_MOVE_CURSOR
            
            States.A_UP_MOVE_CURSOR:
                alufn = b00001
                asel = b0
                bsel = b0100
                we = b1
                ra1 = h4
                wdsel = b0000
                wa = h4
                bra = h4
                brsel = b01
                if (ddr){
                    states.d = States.A_UP_MOVE_CURSOR
                }
                else if(~ddr){
                    states.d = States.A_UP_STORE_PIXEL
                }
            
            States.A_UP_STORE_PIXEL:
                we = b1
                wdsel = b0100
                wa = h5
                states.d = States.A_UP_CURSOR_COLOUR
            
            States.A_UP_CURSOR_COLOUR:
                asel = b0
                ra1 = h4
                bwa = rd1
                bwe = b1
                bwd = b11
                brsel = b00
                states.d = States.A_UP_DIR_IDLE
            
            
            //DOWN BUTTON PRESSED
            States.A_DOWN_DIR_IDLE:
                alufn = b011010
                asel = b0
                ra1 = h5
                if (select_button){
                    if(~rd1[0]){
                        states.d = States.A_DOWN_COUNTP1
                    }
                }
                else if (deselect_button){
                    if (rd1[0]){
                        states.d = States.A_DOWN_COUNTM1
                    }
                }
                else if (move_up_button){
                    states.d = States.A_DOWN_CHECK_PIXEL
                }
            
            States.A_DOWN_COUNTP1:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h2
                wdsel = b0000
                wa = h2
                states.d = States.A_DOWN_SET_PIXEL_A
            
            States.A_DOWN_SET_PIXEL_A:
                we = b1 
                wdsel = b0010
                wa = h5
                states.d = States.A_DOWN_CHECK_PIXEL
            
            States.A_DOWN_COUNTM1:
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h2
                wdsel = b0000
                wa = h2
                states.d = States.A_DOWN_SET_PIXEL_0
            
            States.A_DOWN_SET_PIXEL_0:
                we = b1
                wdsel = b0001
                wa = h5
                states.d = States.A_DOWN_CHECK_PIXEL
            
            States.A_DOWN_CHECK_PIXEL:
                alufn = b110101
                asel = b0
                bsel = b0111
                ra1 = h4
                if(~aluout[0]){
                    states.d = States.A_DOWN_RESET_PIXEL
                }
                if(aluout[0]){
                    states.d = States.A_DOWN_DIR_IDLE
                }
            
            States.A_DOWN_RESET_PIXEL:
                asel = b0
                bsel = b0000
                ra1 = h4
                ra2 = h5
                bwa = rd1
                bwd = rd2
                brsel = b00
                states.d = States.A_DOWN_MOVE_CURSOR
            
            States.A_DOWN_MOVE_CURSOR:
                alufn = ADD
                asel = b0
                bsel = b0100
                we = b1
                ra1 = h4
                wdsel = b0000
                wa = h4
                bra = h4
                brsel = b01
                if (ddr){
                    states.d = States.A_DOWN_MOVE_CURSOR
                }
                else if(~ddr){
                    states.d = States.A_DOWN_STORE_PIXEL
                }
            
            States.A_DOWN_STORE_PIXEL:
                we = b1
                wdsel = b0100
                wa = h5
                states.d = States.A_DOWN_CURSOR_COLOUR
            
            States.A_DOWN_CURSOR_COLOUR:
                asel = b0
                ra1 = h4
                bwa = rd1
                bwe = b1
                bwd = b11
                brsel = b00
                states.d = States.A_DOWN_DIR_IDLE
            
            //Left button is pressed
            States.A_LEFT_DIR_IDLE:
                alufn = b011010
                asel = b0
                ra1 = h5
                if (select_button){
                    if(~rd1[0]){
                        states.d = States.A_LEFT_COUNTP1
                    }
                }
                else if (deselect_button){
                    if (rd1[0]){
                        states.d = States.A_LEFT_COUNTM1
                    }
                }
                else if (move_up_button){
                    states.d = States.A_LEFT_CHECK_PIXEL
                }
            
            States.A_LEFT_COUNTP1:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h2
                wdsel = b0000
                wa = h2
                states.d = States.A_LEFT_SET_PIXEL_A
            
            States.A_LEFT_SET_PIXEL_A:
                we = b1 
                wdsel = b0010
                wa = h5
                states.d = States.A_LEFT_CHECK_PIXEL
            
            States.A_LEFT_COUNTM1:
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h2
                wdsel = b0000
                wa = h2
                states.d = States.A_LEFT_SET_PIXEL_0
            
            States.A_LEFT_SET_PIXEL_0:
                we = b1
                wdsel = b0001
                wa = h5
                states.d = States.A_LEFT_CHECK_PIXEL
            
            States.A_LEFT_CHECK_PIXEL:
                asel = b0
                ra1 = h4
                if(~|rd1[5:0]){
                    states.d = States.A_LEFT_RESET_PIXEL
                }
                else {
                    states.d = States.A_LEFT_DIR_IDLE
                }
            
            States.A_LEFT_RESET_PIXEL:
                asel = b0
                bsel = b0000
                ra1 = h4
                ra2 = h5
                bwa = rd1
                bwd = rd2
                brsel = b00
                states.d = States.A_LEFT_MOVE_CURSOR
            
            States.A_LEFT_MOVE_CURSOR:
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h4
                wdsel = b0000
                wa = h4
                bra = h4
                brsel = b01
                if (ddr){
                    states.d = States.A_LEFT_MOVE_CURSOR
                }
                else if(~ddr){
                    states.d = States.A_LEFT_STORE_PIXEL
                }
            
            States.A_LEFT_STORE_PIXEL:
                we = b1
                wdsel = b0100
                wa = h5
                states.d = States.A_LEFT_CURSOR_COLOUR
            
            States.A_LEFT_CURSOR_COLOUR:
                asel = b0
                ra1 = h4
                bwa = rd1
                bwe = b1
                bwd = b11
                brsel = b00
                states.d = States.A_LEFT_DIR_IDLE
            
            // Right button is pressed
            States.A_RIGHT_DIR_IDLE:
                alufn = b011010
                asel = b0
                ra1 = h5
                if (select_button){
                    if(~rd1[0]){
                        states.d = States.A_RIGHT_COUNTP1
                    }
                }
                else if (deselect_button){
                    if (rd1[0]){
                        states.d = States.A_RIGHT_COUNTM1
                    }
                }
                else if (move_up_button){
                    states.d = States.A_RIGHT_CHECK_PIXEL
                }
            
            States.A_RIGHT_COUNTP1:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h2
                wdsel = b0000
                wa = h2
                states.d = States.A_RIGHT_SET_PIXEL_A
            
            States.A_RIGHT_SET_PIXEL_A:
                we = b1 
                wdsel = b0010
                wa = h5
                states.d = States.A_RIGHT_CHECK_PIXEL
            
            States.A_RIGHT_COUNTM1:
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h2
                wdsel = b0000
                wa = h2
                states.d = States.A_RIGHT_SET_PIXEL_0
            
            States.A_RIGHT_SET_PIXEL_0:
                we = b1
                wdsel = b0001
                wa = h5
                states.d = States.A_RIGHT_CHECK_PIXEL
            
            States.A_RIGHT_CHECK_PIXEL:
                asel = b0
                ra1 = h4
                
                if(&rd1[5:0]){
                    states.d = States.A_RIGHT_RESET_PIXEL
                }
                else {
                    states.d = States.A_RIGHT_DIR_IDLE
                }
            
            States.A_RIGHT_RESET_PIXEL:
                asel = b0
                bsel = b0000
                ra1 = h4
                ra2 = h5
                bwa = rd1
                bwd = rd2
                brsel = b00
                states.d = States.A_RIGHT_MOVE_CURSOR
            
            States.A_RIGHT_MOVE_CURSOR:
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h4
                wdsel = b0000
                wa = h4
                bra = h4
                brsel = b01
                if (ddr){
                    states.d = States.A_RIGHT_MOVE_CURSOR
                }
                else if(~ddr){
                    states.d = States.A_RIGHT_STORE_PIXEL
                }
            
            States.A_RIGHT_STORE_PIXEL:
                we = b1
                wdsel = b0100
                wa = h5
                states.d = States.A_RIGHT_CURSOR_COLOUR
            
            States.A_RIGHT_CURSOR_COLOUR:
                asel = b0
                ra1 = h4
                bwa = rd1
                bwe = b1
                bwd = b11
                brsel = b00
                states.d = States.A_RIGHT_DIR_IDLE
            

            //Player B is placing
            States.B_INPUT_IDLE:
                asel = b0
                ra1 = h5
                if (move_up_button){
                    states.d = States.B_UP_DIR_IDLE
                }
                else if (move_down_button){
                    states.d = States.B_DOWN_DIR_IDLE
                }
                else if (move_left_button){
                    states.d = States.B_LEFT_DIR_IDLE
                }
                else if (move_right_button){
                    states.d = States.B_RIGHT_DIR_IDLE
                }
                else if (select_button){
                    if (~rd2[0]){
                        states.d = States.B_SET_PIXEL_B
                    }
                }
                else if (deselect_button){
                    if (rd2[0]){
                        states.d = States.B_SET_PIXEL_0
                    }
                }
                else if (next_start_button){
                    states.d = States.GAME_IDLE
                }
                

            States.B_UP_DIR_IDLE:
                alufn = b011010
                asel = b0
                ra1 = h5
                if (select_button){
                    if(~rd1[0]){
                        states.d = States.B_UP_COUNTP1
                    }
                }
                else if (deselect_button){
                    if (rd1[0]){
                        states.d = States.B_UP_COUNTM1
                    }
                }
                else if (move_up_button){
                    states.d = States.B_UP_CHECK_PIXEL
                }
            
            States.B_UP_COUNTP1:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h3
                wdsel = b0000
                wa = h3
                states.d = States.B_UP_SET_PIXEL_B
            
            States.B_UP_SET_PIXEL_B:
                we = b1 
                wdsel = b0010
                wa = h5
                states.d = States.B_UP_CHECK_PIXEL
            
            States.B_UP_COUNTM1:
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h3
                wdsel = b0000
                wa = h3
                states.d = States.B_UP_SET_PIXEL_0
             
            States.B_UP_SET_PIXEL_0:
                we = b1
                wdsel = b0001
                wa = h5
                states.d = States.B_UP_CHECK_PIXEL
            
            States.B_UP_CHECK_PIXEL:
                alufn = b110101
                asel = b0
                bsel = b0110
                ra1 = h4
                if(~aluout[0]){
                    states.d = States.B_UP_RESET_PIXEL
                }
                if(aluout[0]){
                    states.d = States.B_UP_DIR_IDLE
                }
            
            States.B_UP_RESET_PIXEL:
                asel = b0
                bsel = b0000
                ra1 = h4
                ra2 = h5
                bwa = rd1
                bwd = rd2
                brsel = b00
                states.d = States.B_UP_MOVE_CURSOR
            
            States.B_UP_MOVE_CURSOR:
                alufn = b00001
                asel = b0
                bsel = b0100
                we = b1
                ra1 = h4
                wdsel = b0000
                wa = h4
                bra = h4
                brsel = b01
                if (ddr){
                    states.d = States.B_UP_MOVE_CURSOR
                }
                else if(~ddr){
                    states.d = States.B_UP_STORE_PIXEL
                }
            
            States.B_UP_STORE_PIXEL:
                we = b1
                wdsel = b0100
                wa = h5
                states.d = States.B_UP_CURSOR_COLOUR
            
            States.B_UP_CURSOR_COLOUR:
                asel = b0
                ra1 = h4
                bwa = rd1
                bwe = b1
                bwd = b11
                brsel = b00
                states.d = States.B_UP_DIR_IDLE
            
            
            // DOWN BUTTON PRESSED
            States.B_DOWN_DIR_IDLE:
                alufn = b011010
                asel = b0
                ra1 = h5
                if (select_button){
                    if(~rd1[0]){
                        states.d = States.B_DOWN_COUNTP1
                    }
                }
                else if (deselect_button){
                    if (rd1[0]){
                        states.d = States.B_DOWN_COUNTM1
                    }
                }
                else if (move_up_button){
                    states.d = States.B_DOWN_CHECK_PIXEL
                }
            
            States.B_DOWN_COUNTP1:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h3
                wdsel = b0000
                wa = h3
                states.d = States.B_DOWN_SET_PIXEL_B
            
            States.B_DOWN_SET_PIXEL_B:
                we = b1 
                wdsel = b0010
                wa = h5
                states.d = States.B_DOWN_CHECK_PIXEL
            
            States.B_DOWN_COUNTM1:
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h3
                wdsel = b0000
                wa = h3
                states.d = States.B_DOWN_SET_PIXEL_0
            
            States.B_DOWN_SET_PIXEL_0:
                we = b1
                wdsel = b0001
                wa = h5
                states.d = States.B_DOWN_CHECK_PIXEL
            
            States.B_DOWN_CHECK_PIXEL:
                alufn = b110101
                asel = b0
                bsel = b0111
                ra1 = h4
                if(~aluout[0]){
                    states.d = States.B_DOWN_RESET_PIXEL
                }
                if(aluout[0]){
                    states.d = States.B_DOWN_DIR_IDLE
                }
            
            States.B_DOWN_RESET_PIXEL:
                asel = b0
                bsel = b0000
                ra1 = h4
                ra2 = h5
                bwa = rd1
                bwd = rd2
                brsel = b00
                states.d = States.B_DOWN_MOVE_CURSOR
            
            States.B_DOWN_MOVE_CURSOR:
                alufn = ADD
                asel = b0
                bsel = b0100
                we = b1
                ra1 = h4
                wdsel = b0000
                wa = h4
                bra = h4
                brsel = b01
                if (ddr){
                    states.d = States.B_DOWN_MOVE_CURSOR
                }
                else if(~ddr){
                    states.d = States.B_DOWN_STORE_PIXEL
                }
            
            States.B_DOWN_STORE_PIXEL:
                we = b1
                wdsel = b0100
                wa = h5
                states.d = States.B_DOWN_CURSOR_COLOUR
            
            States.B_DOWN_CURSOR_COLOUR:
                asel = b0
                ra1 = h4
                bwa = rd1
                bwe = b1
                bwd = b11
                brsel = b00
                states.d = States.B_DOWN_DIR_IDLE
            
            //Left button is pressed
            States.B_LEFT_DIR_IDLE:
                alufn = b011010
                asel = b0
                ra1 = h5
                if (select_button){
                    if(~rd1[0]){
                        states.d = States.B_LEFT_COUNTP1
                    }
                }
                else if (deselect_button){
                    if (rd1[0]){
                        states.d = States.B_LEFT_COUNTM1
                    }
                }
                else if (move_up_button){
                    states.d = States.B_LEFT_CHECK_PIXEL
                }
            
            States.B_LEFT_COUNTP1:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h3
                wdsel = b0000
                wa = h3
                states.d = States.B_LEFT_SET_PIXEL_B
            
            States.B_LEFT_SET_PIXEL_B:
                we = b1 
                wdsel = b0010
                wa = h5
                states.d = States.B_LEFT_CHECK_PIXEL
            
            States.B_LEFT_COUNTM1:
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h3
                wdsel = b0000
                wa = h3
                states.d = States.B_LEFT_SET_PIXEL_0
            
            States.B_LEFT_SET_PIXEL_0:
                we = b1
                wdsel = b0001
                wa = h5
                states.d = States.B_LEFT_CHECK_PIXEL
            
            States.B_LEFT_CHECK_PIXEL:
                asel = b0
                ra1 = h4
                if(~|rd1[5:0]){
                    states.d = States.B_LEFT_RESET_PIXEL
                }
                else {
                    states.d = States.B_LEFT_DIR_IDLE
                }
            
            States.B_LEFT_RESET_PIXEL:
                asel = b0
                bsel = b0000
                ra1 = h4
                ra2 = h5
                bwa = rd1
                bwd = rd2
                brsel = b00
                states.d = States.B_LEFT_MOVE_CURSOR
            
            States.B_LEFT_MOVE_CURSOR:
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h4
                wdsel = b0000
                wa = h4
                bra = h4
                brsel = b01
                if (ddr){
                    states.d = States.B_LEFT_MOVE_CURSOR
                }
                else if(~ddr){
                    states.d = States.B_LEFT_STORE_PIXEL
                }
            
            States.B_LEFT_STORE_PIXEL:
                we = b1
                wdsel = b0100
                wa = h5
                states.d = States.B_LEFT_CURSOR_COLOUR
            
            States.B_LEFT_CURSOR_COLOUR:
                asel = b0
                ra1 = h4
                bwa = rd1
                bwe = b1
                bwd = b11
                brsel = b00
                states.d = States.B_LEFT_DIR_IDLE
            
            // Right button is pressed
            States.B_RIGHT_DIR_IDLE:
                alufn = b011010
                asel = b0
                ra1 = h5
                if (select_button){
                    if(~rd1[0]){
                        states.d = States.B_RIGHT_COUNTP1
                    }
                }
                else if (deselect_button){
                    if (rd1[0]){
                        states.d = States.B_RIGHT_COUNTM1
                    }
                }
                else if (move_up_button){
                    states.d = States.B_RIGHT_CHECK_PIXEL
                }
            
            States.B_RIGHT_COUNTP1:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h3
                wdsel = b0000
                wa = h3
                states.d = States.B_RIGHT_SET_PIXEL_B
            
            States.B_RIGHT_SET_PIXEL_B:
                we = b1 
                wdsel = b0010
                wa = h5
                states.d = States.B_RIGHT_CHECK_PIXEL
            
            States.B_RIGHT_COUNTM1:
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h3
                wdsel = b0000
                wa = h3
                states.d = States.B_RIGHT_SET_PIXEL_0
            
            States.B_RIGHT_SET_PIXEL_0:
                we = b1
                wdsel = b0001
                wa = h5
                states.d = States.B_RIGHT_CHECK_PIXEL
            
            States.B_RIGHT_CHECK_PIXEL:
                asel = b0
                ra1 = h4
                
                if(&rd1[5:0]){
                    states.d = States.B_RIGHT_RESET_PIXEL
                }
                else {
                    states.d = States.B_RIGHT_DIR_IDLE
                }
            
            States.B_RIGHT_RESET_PIXEL:
                asel = b0
                bsel = b0000
                ra1 = h4
                ra2 = h5
                bwa = rd1
                bwd = rd2
                brsel = b00
                states.d = States.B_RIGHT_MOVE_CURSOR
            
            States.B_RIGHT_MOVE_CURSOR:
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h4
                wdsel = b0000
                wa = h4
                bra = h4
                brsel = b01
                if (ddr){
                    states.d = States.B_RIGHT_MOVE_CURSOR
                }
                else if(~ddr){
                    states.d = States.B_RIGHT_STORE_PIXEL
                }
            
            States.B_RIGHT_STORE_PIXEL:
                we = b1
                wdsel = b0100
                wa = h5
                states.d = States.B_RIGHT_CURSOR_COLOUR
            
            States.B_RIGHT_CURSOR_COLOUR:
                asel = b0
                ra1 = h4
                bwa = rd1
                bwe = b1
                bwd = b11
                brsel = b00
                states.d = States.B_RIGHT_DIR_IDLE
            // Game Idle Stage
            States.GAME_IDLE:
                if(decrease_timer.q){
                    states.d = States.TIMER_M1
                }
                else if(~timer){
                    states.d = States.END_GAME
                }
                else if(~pac){
                    states.d = States.END_GAME
                }
                else if(~pbc){
                    states.d = States.END_GAME
                }
                states.d = States.GAME_IDLE_READ_CURR_PIXEL_VALUE
            
            States.GAME_IDLE_READ_CURR_PIXEL_VALUE:
                ra1 = h4
                if(&rd1[5:0]){
                    states.d = States.READ_CURR_PIXEL_VALUE_00_ALL_SR
                }
                else if (~|rd1[5:0]){
                    states.d = States.RESET_SR_POINTERS
                }
                else{
                    states.d = States.READ_BRAM
                }
            // Reading BRAM and loading SR
            // First in the row
            States.RESET_SR_POINTERS:
                srst1 = 1
                srst2 = 1
                srst3 = 1
                states.d = States.SR_00_ALL_SR

            States.SR_00_ALL_SR:
                alufn = b000001
                asel = b0
                bsel = b0100 
                bra = aluout
                bwe = b0
                swd1 = b00
                swe1 = b1
                sre1 = b0
                swd2 = b00
                swe2 = b1
                sre2 = b0
                swd3 = b00
                swe3 = b1
                sre3 = b0
                if (ddr){
                    states.d = States.SR_00_ALL_SR
                }
                else if (~ddr){
                    states.d = States.SR_LOAD_TOP_MID
                }
            
            States.SR_LOAD_TOP_MID:
                alufn = b000001
                asel  = b0
                bsel = b0101 
                ra1 = h4
                bra = aluout
                bwe = b0
                swd1 = brd
                swe1 = b1
                sre1 = b0
                if (ddr){
                    states.d = States.SR_LOAD_TOP_MID
                }
                else if (~ddr){
                    states.d = States.SR_LOAD_MID_MID
                }
            States.SR_LOAD_MID_MID:
                alufn = ADD
                asel  = b0
                bsel = b0001
                ra1 = h4
                bra = aluout
                bwe = b0
                swd2 = brd
                swe2 = b1
                sre2 = b0
                if (ddr){
                    states.d = States.SR_LOAD_MID_MID
                }
                else if (~ddr){
                    states.d = States.SR_LOAD_MID_RIGHT
                }
            States.SR_LOAD_MID_RIGHT:
                alufn = ADD
                asel  = b0
                bsel = b0100
                ra1 = h4
                bra = aluout
                bwe = b0
                swd2 = brd
                swe2 = b1
                sre2 = b0
                if (ddr){
                    states.d = States.SR_LOAD_MID_RIGHT
                }
                else if (~ddr){
                    states.d = States.SR_LOAD_BOT_MID
                }
            States.SR_LOAD_BOT_MID:
                alufn = ADD
                asel  = b0
                bsel = b0101
                ra1 = h4
                bra = aluout
                bwe = b0
                swd3 = brd
                swe3 = b1
                sre3 = b0
                if (ddr){
                    states.d = States.SR_LOAD_BOT_MID
                }
                else if (~ddr){
                    states.d = States.SR_LOAD_BOT_RIGHT
                }
            States.SR_LOAD_BOT_RIGHT:
                swd3 = brd
                swe3 = b1
                sre3 = b0
                states.d = States.READ_TOP_LEFT
            // Pixel is at middle row to load sr
            States.READ_BRAM:
                alufn = b000001
                asel = b0
                bsel = b0100
                ra1 = h4
                bra = aluout
                if (ddr){
                    states.d = States.READ_BRAM
                }
                else if (~ddr){
                    states.d = States.RB_LOAD_TOP_RIGHT
                }
            States.RB_LOAD_TOP_RIGHT:
                alufn = ADD
                asel = b0
                bsel = b0001
                ra1 = h4
                bra = aluout
                swd1 = brd
                swe1 = b1
                sre1 = b0
                if (ddr){
                    states.d = States.RB_LOAD_TOP_RIGHT
                }
                else if (~ddr){
                    states.d = States.RB_LOAD_MID_RIGHT
                }
            States.RB_LOAD_MID_RIGHT:
                alufn = ADD
                asel = b0
                bsel = b0001
                ra1 = h4
                bra = aluout
                swd1 = brd
                swe1 = b1
                sre1 = b0
                if (ddr){
                    states.d = States.RB_LOAD_MID_RIGHT
                }
                else if (~ddr){
                    states.d = States.RB_LOAD_BOT_RIGHT
                }
            States.RB_LOAD_BOT_RIGHT:
                swd3 = brd
                swe3 = b1
                sre3 = b0
                if (ddr){
                    states.d = States.RB_LOAD_BOT_RIGHT
                }
                else if (~ddr){
                    states.d = States.READ_TOP_LEFT
                }
            //SR at the end
            States.READ_CURR_PIXEL_VALUE_00_ALL_SR:
                swd3 = brd
                swe3 = b1
                sre3 = b0
                if (ddr){
                    states.d = States.READ_CURR_PIXEL_VALUE_00_ALL_SR
                }
                else if (~ddr){
                    states.d = States.READ_TOP_LEFT
                }
            // Reading top left pixel for neighbours
            States.READ_TOP_LEFT:
                sre1 = b1
                case(srd1){
                    b01:
                        states.d = States.TOP_LEFT_ADD_A_NEIGHBOUR
                    b10:
                        states.d = States.TOP_LEFT_ADD_B_NEIGHBOUR
                    b00:
                        states.d = States.READ_TOP_MID
                }
            
            States.TOP_LEFT_ADD_A_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h0
                wdsel = b0000
                wa = h0
                states.d = States.READ_TOP_MID
            
            States.TOP_LEFT_ADD_B_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h1
                wdsel = b0000
                wa = h1
                states.d = States.READ_TOP_MID
            
            // Reading top mid pixel for neighbours
            States.READ_TOP_MID:
                sre1 = b1
                case(srd1){
                    b01:
                        states.d = States.TOP_MID_ADD_A_NEIGHBOUR
                    b10:
                        states.d = States.TOP_MID_ADD_B_NEIGHBOUR
                    b00:
                        states.d = States.READ_TOP_RIGHT
                }
            
            States.TOP_MID_ADD_A_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h0
                wdsel = b0000
                wa = h0
                states.d = States.READ_TOP_MID
            
            States.TOP_MID_ADD_B_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h1
                wdsel = b0000
                wa = h1
                states.d = States.READ_TOP_MID
            
            // Reading top right pixel for neighbours
            States.READ_TOP_RIGHT:
                sre1 = b1
                case(srd1){
                    b01:
                        states.d = States.TOP_RIGHT_ADD_A_NEIGHBOUR
                    b10:
                        states.d = States.TOP_RIGHT_ADD_B_NEIGHBOUR
                    b00:
                        states.d = States.READ_MID_LEFT
                }
            
            States.TOP_RIGHT_ADD_A_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h0
                wdsel = b0000
                wa = h0
                states.d = States.READ_TOP_RIGHT
            
            States.TOP_RIGHT_ADD_B_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h1
                wdsel = b0000
                wa = h1
                states.d = States.READ_TOP_RIGHT
        
            // Reading mid left pixel for neighbours
            States.READ_MID_LEFT:
                sre2 = b1
                case(srd2){
                    b01:
                        states.d = States.MID_LEFT_ADD_A_NEIGHBOUR
                    b10:
                        states.d = States.MID_LEFT_ADD_B_NEIGHBOUR
                    b00:
                        states.d = States.READ_TARGET_PIXEL
                }
            
            States.MID_LEFT_ADD_A_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h0
                wdsel = b0000
                wa = h0
                states.d = States.READ_TARGET_PIXEL
            
            States.MID_LEFT_ADD_B_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h1
                wdsel = b0000
                wa = h1
                states.d = States.READ_TARGET_PIXEL
            
            // Reading target pixel for neighbours
            States.READ_TARGET_PIXEL:
                we = b1
                wdsel = b101
                wa = h5
                sre2 = b1

            // Reading mid right pixel for neighbours
            States.READ_MID_RIGHT:
                sre2 = b1
                case(srd2){
                    b01:
                        states.d = States.MID_RIGHT_ADD_A_NEIGHBOUR
                    b10:
                        states.d = States.MID_RIGHT_ADD_B_NEIGHBOUR
                    b00:
                        states.d = States.READ_BOT_LEFT
                }
            
            States.MID_RIGHT_ADD_A_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h0
                wdsel = b0000
                wa = h0
                states.d = States.READ_MID_RIGHT
            
            States.MID_RIGHT_ADD_B_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h1
                wdsel = b0000
                wa = h1
                states.d = States.READ_MID_RIGHT
            
            // Reading bot left pixel for neighbours
            States.READ_BOT_LEFT:
                sre3 = b1
                case(srd3){
                    b01:
                        states.d = States.BOT_LEFT_ADD_A_NEIGHBOUR
                    b10:
                        states.d = States.BOT_LEFT_ADD_B_NEIGHBOUR
                    b00:
                        states.d = States.READ_BOT_MID
                }
            
            States.BOT_LEFT_ADD_A_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h0
                wdsel = b0000
                wa = h0
                states.d = States.READ_BOT_MID
            
            States.BOT_LEFT_ADD_B_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h1
                wdsel = b0000
                wa = h1
                states.d = States.READ_BOT_MID
            
            // Reading bot mid pixel for neighbours
            States.READ_BOT_MID:
                sre3 = b1
                case(srd3){
                    b01:
                        states.d = States.BOT_MID_ADD_A_NEIGHBOUR
                    b10:
                        states.d = States.BOT_MID_ADD_B_NEIGHBOUR
                    b00:
                        states.d = States.READ_BOT_RIGHT
                }
            
            States.BOT_MID_ADD_A_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h0
                wdsel = b0000
                wa = h0
                states.d = States.READ_BOT_MID
            
            States.BOT_MID_ADD_B_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h1
                wdsel = b0000
                wa = h1
                states.d = States.READ_BOT_MID
            
            // Reading bot right pixel for neighbours
            States.READ_BOT_RIGHT:
                sre3 = b1
                case(srd3){
                    b01:
                        states.d = States.BOT_RIGHT_ADD_A_NEIGHBOUR
                    b10:
                        states.d = States.BOT_RIGHT_ADD_B_NEIGHBOUR
                    b00:
                        states.d = States.SR_EMPTY_READ_1
                }
            
            States.BOT_RIGHT_ADD_A_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h0
                wdsel = b0000
                wa = h0
                states.d = States.SR_EMPTY_READ_1
            
            States.BOT_RIGHT_ADD_B_NEIGHBOUR:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h1
                wdsel = b0000
                wa = h1
                states.d = States.SR_EMPTY_READ_1

            States.SR_EMPTY_READ_1:
                sre1 = b1
                sre2 = b1
                sre3 = b1
                states.d = States.SR_EMPTY_READ_2
            
            States.SR_EMPTY_READ_2:
                sre1 = b1
                sre2 = b1
                sre3 = b1
                states.d = States.CHECK_NEIGHBOURS
            
            //Game logic
            States.CHECK_NEIGHBOURS:
                ra1 = h5
                case(rd1){
                    b00:
                        states.d = States.B00_CHECK_A_NEIGHBOURS_EQ_B_NEIGHBOURS
                    b10:
                        states.d = States.B10_CHECK_A_NEIGHBOUR_LE_B_NEIGHBOUR
                    b01:
                        states.d = States.B01_CHECK_B_NEIGHBOUR_LE_A_NEIGHBOUR
                }
            //current -pixel is game state
            States.B00_CHECK_A_NEIGHBOURS_EQ_B_NEIGHBOURS:
                alufn = b110101
                asel = b0
                bsel = b0000
                ra1 = h0
                ra2 = h1
                case(aluout){
                    b0:
                        states.d = States.B00_CHECK_A_NEIGHBOUR_EQ_3
                    b1:
                        states.d = States.SET_00
                }

            States.B00_CHECK_A_NEIGHBOUR_EQ_3:
                alufn = b110011
                asel = b0
                bsel = b0011
                ra1 = h0
                case(aluout){
                    b0:
                        states.d = States.B00_A_COUNTP1
                    b1:
                        states.d = States.B00_CHECK_B_NEIGHBOUR_EQ_3
                }
        
            States.B00_CHECK_B_NEIGHBOUR_EQ_3:
                alufn = CMPEQ
                asel = b0
                bsel = b0011
                ra1 = h1
                case(aluout){
                    b0:
                        states.d = States.SET_00
                    b1:
                        states.d = States.B00_B_COUNTP1
                }

            States.B00_B_COUNTP1:
                alufn = ADD
                asel =b0
                bsel = b0001
                we = b1
                ra1 = h3
                wdsel = b0000
                wa = h3
                states.d = States.SET_B

            States.B00_A_COUNTP1:
                alufn = ADD
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h2
                wdsel = b0000
                wa = h2
                states.d = States.SET_A

            // current pixel is b10
            States.B10_CHECK_A_NEIGHBOUR_LE_B_NEIGHBOUR:
                alufn = CMPLT
                asel =b0
                bsel = b0000
                ra1 = h0
                ra2 = h1
                case(aluout){
                    b1:
                        states.d = States.B10_CHECK_B_NEIGHBOUR_EQ_2
                    b0:
                        states.d = States.B10_B_COUNTM1
                }
            States.B10_CHECK_B_NEIGHBOUR_EQ_2:
                alufn = CMPEQ
                asel = b0
                bsel = b0010
                ra1 = h1
                case(aluout){
                    b0:
                        states.d = States.B10_CHECK_B_NEIGHBOUR_EQ_3
                    b1:
                        states.d = States.SET_B
                }
            States.B10_CHECK_B_NEIGHBOUR_EQ_3:
                alufn = CMPEQ
                asel = b0
                bsel = b0011 
                ra1 =h1
                case(aluout){
                    b0:
                        states.d = States.B10_B_COUNTM1
                    b1:
                        states.d = States.SET_B 
                }
            States.B10_B_COUNTM1:
                alufn = SUB
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h3
                wdsel = b0000
                wa = h3
                states.d = States.SET_00

            //current pixel is b01
            States.B01_CHECK_B_NEIGHBOUR_LE_A_NEIGHBOUR:
                alufn = CMPLT
                asel = b0
                bsel = b0000
                ra1 = h1
                ra2 = h0
                case(aluout){
                    b1:
                        states.d = States.B01_CHECK_A_NEIGHBOUR_EQ_2
                    b0:
                        states.d = States.B01_A_COUNTM1
                }
            
            States.B01_CHECK_A_NEIGHBOUR_EQ_2:
                alufn = CMPEQ
                asel = b0
                bsel = b0010
                ra1 = h0
                case(aluout){
                    b0:
                        states.d = States.B01_A_COUNTM1
                    b1:
                        states.d = States.SET_A
                }
            
            States.B01_A_COUNTM1:
                alufn = SUB
                asel = b0
                bsel = b0001
                we = b1
                ra1 = h2
                wdsel = b0000
                wa = h2
                states.d = States.SET_00
            // Setting pixel as A B or 00

            States.SET_A:
                ra1 = h4
                bwa = rd1
                bwe = b1
                bwd = b01
                states.d = States.RESET_A_NEIGHBOUR
            
            States.SET_B:
                ra1 = h4
                bwa = rd1
                bwe = b1
                bwd = b10
                states.d = States.RESET_A_NEIGHBOUR
            
            States.SET_00:
                ra1 = h4
                bwa = rd1
                bwe = b1
                bwd = b00
                states.d = States.RESET_A_NEIGHBOUR

            //Resetting neighbours

            States.RESET_A_NEIGHBOUR:
                we = b1
                wa = h0
                wdsel = b0001
                states.d = States.RESET_B_NEIGHBOUR
            
            States.RESET_B_NEIGHBOUR:
                we = b1
                wa = h1
                wdsel = b0001
                states.d = States.MOVE_PIXEL_ADDRESS
            
            States.MOVE_PIXEL_ADDRESS:
                alufn = ADD
                asel = b0 
                bsel = b0001
                we = b1
                ra1 = h4
                wdsel = b0000
                wa = h4
                states.d = States.CHECK_AT_LAST_PIXEL
            
            States.CHECK_AT_LAST_PIXEL:
                alufn = CMPLT
                asel = b0
                bsel = b1001 
                ra1 = h4
                case(aluout){
                    b0:
                        states.d = States.SWITCH_BRAM
                    b1:
                        states.d = States.GAME_IDLE
                }
            States.SWITCH_BRAM:
                alufn = XOR
                asel = b0
                bsel = b0001
                we = b1
                wa = h7
                ra1 = h7
                wdsel = b0000
                case(ddr){
                    b1:
                        states.d = States.SWITCH_BRAM
                    b0:
                        states.d = States.SET_PIXEL_TO_BEGINNING
                }
            
            States.SET_PIXEL_TO_BEGINNING:
                we = b1
                wa = h4
                wdsel = b1001
                states.d = States.CHECK_AT_LAST_PIXEL
        }   
    }
}