module fsm #(
) (
    input clk,  // clock
    input rst,  // reset
    
    input next_player_button,
    input reset_button,
    
    input move_up_button,
    input move_down_button,
    input move_left_button,
    input move_right_button,
    
    input play_button,
    
    input deselect_button,
    input select_button,
    
    input pac,
    input pbc,
    input timer,
    input brd,
    input ddr,
    
    input rd1,
    input rd2,

    output brsel[2],                        // selector override
    output bra[13],          // read address
    output bwa[13],          // write address
    output bwe,                          // write enable
    output bwd[2],                   // write data
<<<<<<< Updated upstream
    
    output ra1[32],
    output ra2[32],
    output wa[3],
    output we,
    output alufn[6],
    output asel,
    output bsel[4],
    output wdsel[4],
    
=======
>>>>>>> Stashed changes
    
) {
    enum States {
        A_INPUT_IDLE, A_SET_PIXEL_A, A_SET_PIXEL_0, 
        
        A_UP_DIR_IDLE, A_UP_COUNTP1, A_UP_SET_PIXEL_A, A_UP_COUNTM1, A_UP_SET_PIXEL_0, A_UP_CHECK_PIXEL, A_UP_RESET_PIXEL, A_UP_MOVE_CURSOR, A_UP_STORE_PIXEL, A_UP_CURSOR_COLOUR, 
        A_DOWN_DIR_IDLE, A_DOWN_COUNTP1, A_DOWN_SET_PIXEL_A, A_DOWN_COUNTM1, A_DOWN_SET_PIXEL_0, A_DOWN_CHECK_PIXEL, A_DOWN_RESET_PIXEL, A_DOWN_MOVE_CURSOR, A_DOWN_STORE_PIXEL, A_DOWN_CURSOR_COLOUR, 
        A_LEFT_DIR_IDLE, A_LEFT_COUNTP1, A_LEFT_SET_PIXEL_A, A_LEFT_COUNTM1, A_LEFT_SET_PIXEL_0, A_LEFT_CHECK_PIXEL, A_LEFT_RESET_PIXEL, A_LEFT_MOVE_CURSOR, A_LEFT_STORE_PIXEL, A_LEFT_CURSOR_COLOUR, 
        A_RIGHT_DIR_IDLE, A_RIGHT_COUNTP1, A_RIGHT_SET_PIXEL_A, A_RIGHT_COUNTM1, A_RIGHT_SET_PIXEL_0, A_RIGHT_CHECK_PIXEL, A_RIGHT_RESET_PIXEL, A_RIGHT_MOVE_CURSOR, A_RIGHT_STORE_PIXEL, A_RIGHT_CURSOR_COLOUR, 
        
        B_INPUT_IDLE, B_SET_PIXEL_A, B_SET_PIXEL_0, 
        
        B_UP_DIR_IDLE, B_UP_COUNTP1, B_UP_SET_PIXEL_A, B_UP_COUNTM1, B_UP_SET_PIXEL_0, B_UP_CHECK_PIXEL, B_UP_RESET_PIXEL, B_UP_MOVE_CURSOR, B_UP_STORE_PIXEL, B_UP_CURSOR_COLOUR, 
        B_DOWN_DIR_IDLE, B_DOWN_COUNTP1, B_DOWN_SET_PIXEL_A, B_DOWN_COUNTM1, B_DOWN_SET_PIXEL_0, B_DOWN_CHECK_PIXEL, B_DOWN_RESET_PIXEL, B_DOWN_MOVE_CURSOR, B_DOWN_STORE_PIXEL, B_DOWN_CURSOR_COLOUR, 
        B_LEFT_DIR_IDLE, B_LEFT_COUNTP1, B_LEFT_SET_PIXEL_A, B_LEFT_COUNTM1, B_LEFT_SET_PIXEL_0, B_LEFT_CHECK_PIXEL, B_LEFT_RESET_PIXEL, B_LEFT_MOVE_CURSOR, B_LEFT_STORE_PIXEL, B_LEFT_CURSOR_COLOUR, 
        B_RIGHT_DIR_IDLE, B_RIGHT_COUNTP1, B_RIGHT_SET_PIXEL_A, B_RIGHT_COUNTM1, B_RIGHT_SET_PIXEL_0, B_RIGHT_CHECK_PIXEL, B_RIGHTT_RESET_PIXEL, B_RIGHT_MOVE_CURSOR, B_RIGHT_STORE_PIXEL, B_RIGHT_CURSOR_COLOUR,        
        GAME_IDLE, DECREASE_TIMER, END_GAME, 
        
        GAME_IDLE_READ_CURR_PIXEL_VALUE, 
        
        RESET_SR_POINTERS, SR_00_ALL_SR, SR_LOAD_TOP_MID, SR_LOAD_TOP_RIGHT, SR_LOAD_MID_MID, SR_LOAD_MID_RIGHT, SR_LOAD_BOT_MID, SR_LOAD_BOT_RIGHT, 
        READ_BRAM, RB_LOAD_TOP_RIGHT, RB_LOAD_MID_RIGHT, RB_LOAD_BOT_RIGHT, 
        READ_CURR_PIXEL_VALUE_00_ALL_SR, 
        
        READ_TOP_LEFT, TOP_LEFT_ADD_A_NEIGHBOUR, TOP_LEFT_ADD_B_NEIGHBOUR, 
        READ_TOP_MID, TOP_MID_ADD_A_NEIGHBOUR, TOP_MID_ADD_B_NEIGHBOUR, 
        READ_TOP_RIGHT, TOP_RIGHT_ADD_A_NEIGHBOUR, TOP_RIGHT_ADD_B_NEIGHBOUR, 
        READ_MID_LEFT, MID_LEFT_ADD_A_NEIGHBOUR, MID_LEFT_ADD_B_NEIGHBOUR, 
        READ_TARGET_PIXEL, 
        READ_MID_RIGHT, MID_RIGHT_ADD_A_NEIGHBOUR, MID_RIGHT_ADD_B_NEIGHBOUR, 
        READ_BOT_LEFT, BOT_LEFT_ADD_A_NEIGHBOUR, BOT_LEFT_ADD_B_NEIGHBOUR, 
        READ_BOT_MID, BOT_MID_ADD_A_NEIGHBOUR, BOT_MID_ADD_B_NEIGHBOUR, 
        READ_BOT_RIGHT, BOT_RIGHT_ADD_A_NEIGHBOUR, BOT_RIGHT_ADD_B_NEIGHBOUR, 
        
        SR_EMPTY_READ_1, SR_EMPTY_READ_2, 
        
        CHECK_NEIGHBOURS, 
        //current pixel is 0
        B00_CHECK_A_NEIGHBOURS_EQ_B_NEIGHBOURS, B00_CHECK_A_NEIGHBOUR_EQ_3, B00_CHECK_B_NEIGHBOUR_EQ_3, B00_A_COUNTP1, B00_B_COUNTP1, 
        //current pixel is B
        B10_CHECK_A_NEIGHBOUR_LE_B_NEIGHBOUR, B10_CHECK_B_NEIGHBOUR_EQ_2, B10_CHECK_B_NEIGHBOUR_EQ_3, B10_B_COUNTM1, 
        //current pixel is A, 
        B01_CHECK_A_NEIGHBOUR_LE_B_NEIGHBOUR, B01_CHECK_A_NEIGHBOUR_EQ_2, B01_CHECK_A_NEIGHBOUR_EQ_3, B01_A_COUNTM1, 
        
        SET_A, SET_B, SET_C, 
        
        RESET_A_NEIGHBOUR, RESET_B_NEIGHBOUR, MOVE_PIXEL_ADDRESS, CHECK_IF_PIXEL_AT_END, SWITCH_BRAM, SET_PIXEL_TO_BEGINNING, 
        
        //End game
        SET_PIXEL_ADDRESS_TO_0, ZERO_BRAM, CHECK_ADDRESS_AT_MAX, SET_TIMER, RESET_PIXEL_VALUE, RESET_PIXEL_ADDRESS, SET_SELECTOR_PIXEL_STATE, 
        SET_B_LOW, 
        SET_B_HIGH, 
        COMPUTE, 
        AUTO, 
        IDLE
    }
    
    dff states[$width(States)](#INIT(States.IDLE), .clk(clk))
    
    always {
        states.d = states.q
        out = 0
<<<<<<< Updated upstream
        brsel = b10
=======
>>>>>>> Stashed changes
        bra = 0
        bwa = 0
        bwe = 0
        bwd = 0
<<<<<<< Updated upstream
        ra1 = 0
        ra2 = 0
        wa = 0 
        we = 0 
        alufn = 0
        asel = 0
        bsel = 0
        wdsel = 0
        
        case (states.q){
            States.SET_PIXEL_ADDRESS_TO_0:
                we = b1
                wdsel = b0001
                wa = b100
                states.d = States.ZERO_BRAM

            States.ZERO_BRAM:
                alufn = b000000
                asel = b0
                bsel = b0001
                we = b1
                ra1 = b100
                wdsel = b0000
                wa = b100
                bwa = rd1
                bwe = b1
                bwd = b00
                states.d = States.CHECK_ADDRESS_AT_MAX

            States.CHECK_ADDRESS_AT_MAX:
                alufn = b110101
                asel = b0
                bsel = b1000
                ra1 = b100
                case(alu.out){
                    1:
                        states.d = States.ZERO_BRAM
                    0:
                        states.d = States.SET_TIMER
                }
            
            States.SET_TIMER:
                we = b1
                wdsel = b0110
                wa = b110
                states.d = States.RESET_PIXEL_VALUE
            
            States.RESET_PIXEL_VALUE:
                we = b1
                wdsel = b0001
                wa = b101
                states.d = States.RESET_PIXEL_ADDRESS
            
            States.RESET_PIXEL_ADDRESS:
                we = b1
                wdsel = b0111
                wa = b100
                states.d = States.SET_SELECTOR_PIXEL_STATE
            
            SET_SELECTOR_PIXEL_STATE:
                bwa = 0x860
                bwe = b1
                bwd = 0xB
                brsel = b00
                states.d = States.A_INPUT_IDLE

            States.A_INPUT_IDLE:
                asel = b0
                ra1 = 0x5
                if (move_up_button){
                    states.d = States.A_UP_DIR_IDLE
                }
                else if (move_down_button){
                    states.d = States.A_DOWN_DIR_IDLE
                }
                else if (move_left_button){
                    states.d = States.A_LEFT_DIR_IDLE
                }
                else if (move_right_button){
                    states.d = States.A_RIGHT_DIR_IDLE
                }
                else if (select_button){
                    if (~rd2[0]){
                        states.d = States.A_SET_PIXEL_A
                    }
                }
                else if (deselect_button){
                    if (rd2[0]){
                        states.d = States.A_SET_PIXEL_0
                    }
                }

            States.A_UP_DIR_IDLE{
                alufn = b011010
                asel = b0
                ra1 = 0x5
                if (select_button){
                    if(~rd1[0]){
                        states.d = States.A_UP_COUNTP1
                    }
                }
                else if (deselect_button){
                    if (rd1[0]){
                        states.d = States.A_UP_COUNTM1
                    }
                }
                else if (move_up_button){
                    states.d = States.A_UP_CHECK_PIXEL
                }
            }
            States.A_UP_COUNTP1{
                alufn = b000000
                asel = b0
                bsel = b0001
                we = b1
                ra1 = 0x2
                wdsel = b0000
                wa = 0x2
                states.d = States.A_UP_SET_PIXEL_A
            }
            States.A_UP_SET_PIXEL_A{
                we = b1 
                wdsel = b0010
                wa = 0x5
                states.d = States.A_UP_CHECK_PIXEL
            }
            States.A_UP_COUNTM1{
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = 0x2
                wdsel = b0000
                wa = 0x2
                states.d = States.A_UP_SET_PIXEL_0
            }
            States.A_UP_SET_PIXEL_0{
                we = b1
                wdsel = b0001
                wa = 0x5
                states.d = States.A_UP_CHECK_PIXEL
            }
            States.A_UP_CHECK_PIXEL{
                alufn = b110101
                asel = b0
                bsel = b0110
                ra1 = 0x4
                if(~alu.out){
                    states.d = States.A_UP_RESET_PIXEL
                }
                if(alu.out){
                    states.d = States.A_UP_DIR_IDLE
                }
            }
            States.A_UP_RESET_PIXEL{
                asel = b0
                bsel = b0000
                ra1 = 0x4
                ra2 = 0x5
                bwa = rd1
                bwd = rd2
                brsel = b00
                states.d = States.A_UP_MOVE_CURSOR
            }
            States.A_UP_MOVE_CURSOR{
                alufn = b00001
                asel = b0
                bsel = b0100
                we = b1
                ra1 = 0x4
                wdsel = b0000
                wa = 0x4
                bra = 0x4
                brsel = b01
                if (ddr){
                    states.d = States.A_UP_MOVE_CURSOR
                }
                else if(~ddr){
                    states.d = States.A_UP_STORE_PIXEL
                }
            }
            States.A_UP_STORE_PIXEL{
                we = b1
                wdsel = b0100
                wa = 0x5
                states.d = States.A_UP_CURSOR_COLOUR
            }
            States.A_UP_CURSOR_COLOUR{
                asel = b0
                ra1 = 0x4
                bwa = rd1
                bwe = b1
                bwd = b11
                brsel = b00
                states.d = States.A_UP_DIR_IDLE
            }
            
            //DOWN BUTTON PRESSED
            States.A_DOWN_DIR_IDLE{
                alufn = b011010
                asel = b0
                ra1 = 0x5
                if (select_button){
                    if(~rd1[0]){
                        states.d = States.A_DOWN_COUNTP1
                    }
                }
                else if (deselect_button){
                    if (rd1[0]){
                        states.d = States.A_DOWN_COUNTM1
                    }
                }
                else if (move_up_button){
                    states.d = States.A_DOWN_CHECK_PIXEL
                }
            }
            States.A_DOWN_COUNTP1{
                alufn = b000000
                asel = b0
                bsel = b0001
                we = b1
                ra1 = 0x2
                wdsel = b0000
                wa = 0x2
                states.d = States.A_DOWN_SET_PIXEL_A
            }
            States.A_DOWN_SET_PIXEL_A{
                we = b1 
                wdsel = b0010
                wa = 0x5
                states.d = States.A_DOWN_CHECK_PIXEL
            }
            States.A_DOWN_COUNTM1{
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = 0x2
                wdsel = b0000
                wa = 0x2
                states.d = States.A_DOWN_SET_PIXEL_0
            }
            States.A_DOWN_SET_PIXEL_0{
                we = b1
                wdsel = b0001
                wa = 0x5
                states.d = States.A_DOWN_CHECK_PIXEL
            }
            States.A_DOWN_CHECK_PIXEL{
                alufn = b110101
                asel = b0
                bsel = b0111
                ra1 = 0x4
                if(~alu.out){
                    states.d = States.A_DOWN_RESET_PIXEL
                }
                if(alu.out){
                    states.d = States.A_DOWN_DIR_IDLE
                }
            }
            States.A_DOWN_RESET_PIXEL{
                asel = b0
                bsel = b0000
                ra1 = 0x4
                ra2 = 0x5
                bwa = rd1
                bwd = rd2
                brsel = b00
                states.d = States.A_DOWN_MOVE_CURSOR
            }
            States.A_DOWN_MOVE_CURSOR{
                alufn = b000000
                asel = b0
                bsel = b0100
                we = b1
                ra1 = 0x4
                wdsel = b0000
                wa = 0x4
                bra = 0x4
                brsel = b01
                if (ddr){
                    states.d = States.A_DOWN_MOVE_CURSOR
                }
                else if(~ddr){
                    states.d = States.A_DOWN_STORE_PIXEL
                }
            }
            States.A_DOWN_STORE_PIXEL{
                we = b1
                wdsel = b0100
                wa = 0x5
                states.d = States.A_DOWN_CURSOR_COLOUR
            }
            States.A_DOWN_CURSOR_COLOUR{
                asel = b0
                ra1 = 0x4
                bwa = rd1
                bwe = b1
                bwd = b11
                brsel = b00
                states.d = States.A_DOWN_DIR_IDLE
            }
            //Left button is pressed
            States.A_LEFT_DIR_IDLE{
                alufn = b011010
                asel = b0
                ra1 = 0x5
                if (select_button){
                    if(~rd1[0]){
                        states.d = States.A_LEFT_COUNTP1
                    }
                }
                else if (deselect_button){
                    if (rd1[0]){
                        states.d = States.A_LEFT_COUNTM1
                    }
                }
                else if (move_up_button){
                    states.d = States.A_LEFT_CHECK_PIXEL
                }
            }
            States.A_LEFT_COUNTP1{
                alufn = b000000
                asel = b0
                bsel = b0001
                we = b1
                ra1 = 0x2
                wdsel = b0000
                wa = 0x2
                states.d = States.A_LEFT_SET_PIXEL_A
            }
            States.A_LEFT_SET_PIXEL_A{
                we = b1 
                wdsel = b0010
                wa = 0x5
                states.d = States.A_LEFT_CHECK_PIXEL
            }
            States.A_LEFT_COUNTM1{
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = 0x2
                wdsel = b0000
                wa = 0x2
                states.d = States.A_LEFT_SET_PIXEL_0
            }
            States.A_LEFT_SET_PIXEL_0{
                we = b1
                wdsel = b0001
                wa = 0x5
                states.d = States.A_LEFT_CHECK_PIXEL
            }
            States.A_LEFT_CHECK_PIXEL{
                asel = b0
                ra1 = 0x4
                if(~alu.out){
                    states.d = States.A_LEFT_RESET_PIXEL
                }
                if(alu.out){
                    states.d = States.A_LEFT_DIR_IDLE
                }
            }
            States.A_LEFT_RESET_PIXEL{
                asel = b0
                bsel = b0000
                ra1 = 0x4
                ra2 = 0x5
                bwa = rd1
                bwd = rd2
                brsel = b00
                states.d = States.A_LEFT_MOVE_CURSOR
            }
            States.A_LEFT_MOVE_CURSOR{
                alufn = b00001
                asel = b0
                bsel = b0001
                we = b1
                ra1 = 0x4
                wdsel = b0000
                wa = 0x4
                bra = 0x4
                brsel = b01
                if (ddr){
                    states.d = States.A_LEFT_MOVE_CURSOR
                }
                else if(~ddr){
                    states.d = States.A_LEFT_STORE_PIXEL
                }
            }
            States.A_LEFT_STORE_PIXEL{
                we = b1
                wdsel = b0100
                wa = 0x5
                states.d = States.A_LEFT_CURSOR_COLOUR
            }
            States.A_LEFT_CURSOR_COLOUR{
                asel = b0
                ra1 = 0x4
                bwa = rd1
                bwe = b1
                bwd = b11
                brsel = b00
                states.d = States.A_LEFT_DIR_IDLE
            }
        }   
=======
>>>>>>> Stashed changes
    }
}